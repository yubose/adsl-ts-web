{
  "_id": "aitmed-noodl-web@1.0.1",
  "author": "Christopher Tran<christopher@aitmed.com>",
  "bin": {
    "nui": "./bin/cli.js"
  },
  "version": "1.0.28",
  "description": "",
  "keywords": [],
  "license": "ISC",
  "private": true,
  "scripts": {
    "clean": "rm -rf node_modules package-lock.json packages/*/node_modules packages/*/package-lock.json packages/*/dist packages/*/.cache apps/**/*/node_modules apps/**/*/package-lock.json apps/**/*/dist apps/**/*/.cache",
    "bootstrap": "lerna bootstrap --hoist",
    "build": "npm run lib:build && webpack --mode=production",
    "build:deploy:chinaServer": "npm run build:test && bash chinaServer.sh",
    "build:deploy:noodltest": "npm run build:test && npm run deploy:noodltest",
    "build:deploy:stable": "npm run build:stable && npm run deploy:stable",
    "build:deploy:test": "npm run build:test && npm run deploy:test",
    "build:deploy:static": "npm run build:static && npm run deploy:static",
    "build:serve": "cross-env ECOS_ENV=test NODE_ENV=production npm run serve",
    "build:static": "cross-env NODE_ENV=production lerna exec --scope homepage npm run clean && lerna exec --scope homepage npm run build",
    "build:stable": "cross-env NODE_ENV=production DEPLOYING=true npm run build -- --env ECOS_ENV=stable --env DEPLOYING=true --env NODE_ENV=production",
    "build:test": "cross-env NODE_ENV=production npm run build -- --env ECOS_ENV=test --env DEPLOYING=true",
    "fresh": "cd packages/homepage && gatsby clean && cd ../.. && lerna clean --yes && rm -rf package-lock.json node_modules && npm i -f",
    "deploy:noodltest": "bash s3Deploy.sh build cadltest.aitmed.com",
    "deploy:stable": "bash s3Deploy.sh build",
    "deploy:test": "bash s3Deploy.sh build devtest.aitmed.com",
    "deploy:static": "lerna exec --scope homepage npm run deploy",
    "editor": "lerna exec --scope noodl-editor 'npm run start'",
    "lib:build:development": "cross-env lerna run --scope noodl-ui --scope noodl-types build:development",
    "lib:build": "cross-env lerna exec --scope noodl-ui --scope noodl-types \"npm run build\"",
    "lib:start": "cross-env NODE_ENV=development USE_DEV_PATHS=true lerna exec --scope noodl-ui \"npm run start\"",
    "___disabled_postinstall": "node scripts/postinstall",
    "prebuild": "rm -rf dist build",
    "serve": "cross-env ECOS_ENV=test NODE_ENV=production webpack serve --port 3000 --mode=development",
    "serve:static": "lerna exec --scope homepage npm run serve",
    "start": "webpack serve --port 3000 --mode=development",
    "start:stable": "cross-env NODE_ENV=development HMR=true ECOS_ENV=stable USE_DEV_PATHS=true npm run start",
    "start:test": "cross-env NODE_ENV=development ECOS_ENV=test HMR=true USE_DEV_PATHS=true npm run start -- --env ECOS_ENV=test",
    "start:static": "lerna exec --scope homepage npm start",
    "start:docs:core": "lerna exec --scope core-docs npm start",
    "sync": "node scripts/op sync",
    "test": "cross-env TS_NODE_PROJECT=\"tsconfig.test.json\" NODE_ENV=test USE_DEV_PATHS=true ts-mocha --extensions ts --file src/setupTests.ts --watch --watch-files src src/**/*.test.ts",
    "test:file": "cross-env TS_NODE_PROJECT=\"tsconfig.test.json\" NODE_ENV=test ts-mocha --extensions ts --file src/setupTests.ts --watch --watch-files src",
    "test:nui": "lerna exec --scope noodl-ui \"npm run test\"",
    "test:nui:file": "lerna exec --scope noodl-ui \"npm run test:file\"",
    "updatesdk": "node scripts/update.js -u sdk -d"
  },
  "devDependencies": {
    "@aitmed/cadl": "^1.0.691",
    "@aitmed/ecos-lvl2-sdk": "^1.4.198",
    "@babel/core": "^7.17.9",
    "@babel/plugin-transform-runtime": "^7.17.0",
    "@babel/preset-env": "^7.16.11",
    "@jsmanifest/utils": "^1.0.73",
    "@types/fs-extra": "^9.0.1",
    "@types/lodash": "^4.14.170",
    "@types/node": "^16.9.5",
    "@typescript-eslint/eslint-plugin": "^5.17.0",
    "@typescript-eslint/parser": "^5.17.0",
    "cross-env": "^7.0.3",
    "dotenv": "^10.0.0",
    "esbuild": "^0.14.50",
    "eslint": "^8.12.0",
    "eslint-config-prettier": "^8.5.0",
    "eslint-plugin-import": "^2.26.0",
    "eslint-plugin-prettier": "^4.0.0",
    "fast-glob": "^3.2.11",
    "fs-extra": "^10.0.0",
    "lerna": "^5.1.8",
    "nodemon": "^2.0.9",
    "nx": "^14.4.2",
    "prettier": "^2.6.1",
    "tslib": "^2.3.1",
    "type-fest": "^2.3.4",
    "typescript": "4.5",
    "winston": "^3.8.1",
    "yaml": "^2.1.0"
  },
  "eslintConfig": {
    "root": true,
    "env": {
      "es6": true,
      "mocha": true,
      "node": true,
      "serviceworker": true
    },
    "extends": [
      "plugin:@typescript-eslint/eslint-recommended",
      "eslint:recommended",
      "prettier"
    ],
    "globals": {
      "Twilio": "readonly",
      "echarts": "readonly"
    },
    "ignorePatterns": [
      "**/*.js",
      "**/*.js.map",
      "build",
      "dist",
      "generated",
      "node_modules"
    ],
    "parser": "@typescript-eslint/parser",
    "parserOptions": {
      "ecmaVersion": 2021,
      "project": "./tsconfig.json",
      "sourceType": "module",
      "ecmaFeatures": {}
    },
    "plugins": [
      "@typescript-eslint",
      "prettier"
    ],
    "settings": {
      "import/resolver": {
        "node": {
          "moduleDirectory": [
            "node_modules"
          ]
        }
      }
    },
    "rules": {
      "@typescript-eslint/await-thenable": "warn",
      "@typescript-eslint/ban-ts-comment": "off",
      "@typescript-eslint/consistent-type-assertions": "warn",
      "@typescript-eslint/explicit-module-boundary-types": "off",
      "@typescript-eslint/lines-between-class-members": [
        "error",
        "always",
        {
          "exceptAfterSingleLine": true
        }
      ],
      "@typescript-eslint/no-confusing-non-null-assertion": "warn",
      "@typescript-eslint/no-empty-function": "off",
      "@typescript-eslint/no-extra-semi": "off",
      "@typescript-eslint/no-floating-promises": "error",
      "@typescript-eslint/no-inferrable-types": "off",
      "@typescript-eslint/no-misused-promises": "off",
      "@typescript-eslint/no-namespace": "off",
      "@typescript-eslint/no-this-alias": "off",
      "@typescript-eslint/no-unused-vars": [
        1,
        {
          "argsIgnorePattern": "^_"
        }
      ],
      "@typescript-eslint/prefer-nullish-coalescing": "warn",
      "@typescript-eslint/prefer-enum-initializers": "error",
      "@typescript-eslint/prefer-optional-chain": "error",
      "@typescript-eslint/prefer-ts-expect-error": "error",
      "@typescript-eslint/promise-function-async": "warn",
      "@typescript-eslint/quotes": "off",
      "@typescript-eslint/sort-type-union-intersection-members": "warn",
      "@typescript-eslint/unified-signatures": "error",
      "eqeqeq": 0,
      "implicit-arrow-linebreak": "off",
      "import/export": "off",
      "import/extensions": "off",
      "import/no-extraneous-dependencies": "off",
      "import/no-unresolved": "off",
      "import/prefer-default-export": "off",
      "prefer-const": "off",
      "prettier/prettier": "error",
      "no-async-promise-executor": "off",
      "no-dupe-class-members": "off",
      "no-inner-declarations": "off",
      "no-redeclare": "off",
      "no-setter-return": "off",
      "no-undef": "off",
      "no-unused-vars": "off",
      "no-unreachable": "off",
      "prefer-rest-params": "off",
      "quotes": "off"
    }
  },
  "name": "aitmed-noodl-web",
  "prettier": {
    "arrowParens": "always",
    "endOfLine": "lf",
    "printWidth": 80,
    "semi": false,
    "singleQuote": true,
    "tabWidth": 2,
    "trailingComma": "all"
  },
  "workspaces": [
    "apps/*",
    "packages/*"
  ]
}