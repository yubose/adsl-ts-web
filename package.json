{
  "name": "aitmed-noodl-web",
  "version": "1.0.1",
  "author": "Christopher Tran<christopher@aitmed.com>",
  "description": "",
  "keywords": [],
  "license": "ISC",
  "private": true,
  "scripts": {
    "prebuild": "rm -rf dist build",
    "build": "npm run lib:build && webpack --mode=production",
    "build:stable": "cross-env ECOS_ENV=stable NODE_ENV=production npm run build",
    "build:test": "cross-env ECOS_ENV=test NODE_ENV=production npm run build",
    "build:deploy:stable": "npm run build:stable && npm run deploy:stable",
    "build:deploy:test": "npm run build:test && npm run deploy:test",
    "build:deploy:noodltest": "npm run build:test && npm run deploy:noodltest",
    "deploy:stable": "bash s3Deploy.sh build",
    "deploy:test": "bash s3Deploy.sh build devtest.aitmed.com",
    "deploy:cadltest": "bash s3Deploy.sh build cadltest.aitmed.com",
    "postinstall": "lerna run --parallel build ",
    "start": "cross-env ECOS_ENV=test NODE_ENV=production webpack-dev-server --mode=development",
    "start:stable": "cross-env ECOS_ENV=stable NODE_ENV=development webpack-dev-server",
    "start:test": "cross-env ECOS_ENV=test USE_DEV_PATHS=true npm run start",
    "script": "node scripts/compiled/index.js",
    "script:file": "cross-env NODE_ENV=development FILE=mockWebpage.ts webpack-dev-server --mode=development --config webpack.scripts.js",
    "script:fetchjson": "npm run script fetch json",
    "script:fetchyml": "npm run script fetch yml",
    "script:keys": "npm run script keys",
    "script:properties": "npm run script properties",
    "scripts:build": "webpack --mode production --config webpack.scripts.js",
    "scripts:start": "rm -rf scripts/compiled && webpack --mode development --config webpack.scripts.js --watch",
    "server": "ts-node-dev --transpile-only --project tsconfig.test.json --watch scripts scripts/server.ts",
    "cypress:open": "node_modules/.bin/cypress open",
    "test": "cross-env TS_NODE_PROJECT=\"tsconfig.test.json\" NODE_ENV=test ts-mocha --require source-map-support/register -r jsdom-global/register -r ts-node/register -r tsconfig-paths/register --extensions ts --file src/setupTests.ts --watch --watch-files src src/**/*.test.ts",
    "test:file": "cross-env TS_NODE_PROJECT=\"tsconfig.test.json\" NODE_ENV=test ts-mocha -r jsdom-global/register -r ts-node/register -r tsconfig-paths/register --extensions ts --file src/setupTests.ts --watch --watch-files \"src/**/*.ts\"",
    "test:noodlui": "lerna exec --scope noodl-ui \"npm run test\"",
    "test:noodlui:file": "lerna exec --scope noodl-ui \"npm run test:file\"",
    "test:noodlui:internal": "lerna exec --scope noodl-ui \"npm run test:file src/**/*_internalResolver.test.ts\"",
    "test:noodluidom": "lerna exec --scope noodl-ui-dom \"npm run test\"",
    "test:noodluidom:file": "lerna exec --scope noodl-ui-dom \"npm run test:file\"",
    "test:actionchain": "lerna exec --scope noodl-ui \"npm run test:file src/__tests__/ActionChain.test.ts --verbose\"",
    "test:components": "lerna exec --scope noodl-ui \"npm run test:file src/__tests__/*Component*.test.ts\"",
    "test:coverage:components": "cross-env TS_NODE_PROJECT=\"tsconfig.test.json\" NODE_ENV=test nyc ts-mocha -r jsdom-global/register -r ts-node/register/transpile-only -r tsconfig-paths/register --require source-map-support/register --extensions ts --file ./src/setupTests.ts \"packages/noodl-ui/src/__tests__/*(*Component|noodl-ui).test.ts\"",
    "test:noodlutils": "lerna exec --scope noodl-utils \"npm run test\"",
    "test:noodlutils:file": "lerna exec --scope noodl-utils \"npm run test:file\"",
    "install:logsnap": "lerna exec --scope logsnap \"npm run build\"",
    "install:noodl-ui": "lerna exec --scope noodl-ui \"npm run build\"",
    "install:noodl-ui-dom": "lerna exec --scope noodl-ui-dom \"npm run build\"",
    "install:noodl-utils": "lerna exec --scope noodl-utils \"npm run build\"",
    "install:noodl-types": "lerna exec --scope noodl-types \"npm run build\"",
    "lib:build": "cross-env NODE_ENV=development lerna run --parallel build",
    "lib:start": "cross-env NODE_ENV=development USE_DEV_PATHS=true lerna run --parallel start",
    "lib:utils": "cross-env NODE_ENV=development USE_DEV_PATHS=true lerna run --parallel --ignore noodl-ui --ignore noodl-ui-dom start -- --watch",
    "lib:start:noodlutils": "cross-env NODE_ENV=development lerna run start --ignore=noodl-ui --ignore=noodl-ui-dom --ignore=logsnap"
  },
  "dependencies": {
    "logsnap": "file:packages\\logsnap",
    "noodl-building-blocks": "file:packages\\noodl-building-blocks",
    "noodl-ui": "file:packages\\noodl-ui",
    "noodl-ui-dom": "file:packages\\noodl-ui-dom",
    "noodl-utils": "file:packages\\noodl-utils"
  },
  "devDependencies": {
    "@aitmed/cadl": "^1.0.150",
    "@aitmed/ecos-lvl2-sdk": "^1.4.117",
    "@babel/cli": "^7.10.5",
    "@babel/core": "^7.11.6",
    "@babel/plugin-proposal-class-properties": "^7.10.4",
    "@babel/plugin-proposal-object-rest-spread": "^7.11.0",
    "@babel/plugin-proposal-private-methods": "^7.10.4",
    "@babel/plugin-transform-runtime": "^7.11.5",
    "@babel/preset-env": "^7.10.3",
    "@babel/preset-typescript": "^7.12.1",
    "@babel/register": "^7.12.1",
    "@rollup/plugin-babel": "^5.2.1",
    "@rollup/plugin-commonjs": "^15.0.0",
    "@rollup/plugin-node-resolve": "^9.0.0",
    "@testing-library/dom": "^7.24.1",
    "@testing-library/user-event": "^12.1.0",
    "@types/chai": "^4.2.11",
    "@types/chai-dom": "0.0.10",
    "@types/chai-as-promised": "^7.1.3",
    "@types/fs-extra": "^9.0.1",
    "@types/lodash": "^4.14.156",
    "@types/mocha": "^8.0.3",
    "@types/sinon": "^9.0.4",
    "@types/sinon-chai": "^3.2.5",
    "@types/twilio-video": "^2.7.0",
    "@typescript-eslint/eslint-plugin": "^4.1.1",
    "@typescript-eslint/parser": "^4.1.1",
    "axios": "^0.20.0",
    "axios-mock-adapter": "^1.18.2",
    "babel-loader": "^8.1.0",
    "babel-plugin-istanbul": "^6.0.0",
    "babel-plugin-lodash": "^3.3.4",
    "body-parser": "^1.19.0",
    "bundle-stats-webpack-plugin": "^2.2.0",
    "chai": "^4.2.0",
    "chai-as-promised": "^7.1.1",
    "chai-dom": "^1.8.2",
    "chalk": "^4.1.0",
    "circular-dependency-plugin": "^5.2.0",
    "commander": "^6.1.0",
    "concurrently": "^5.3.0",
    "cors": "^2.8.5",
    "cross-env": "^7.0.2",
    "css-loader": "^4.2.1",
    "cypress": "^5.6.0",
    "eslint": "^7.9.0",
    "eslint-config-airbnb": "^18.2.0",
    "eslint-config-prettier": "^6.11.0",
    "eslint-plugin-prettier": "^3.1.4",
    "express": "^4.17.1",
    "fs-extra": "^9.0.1",
    "html-webpack-injector": "^1.1.4",
    "html-webpack-plugin": "^4.3.0",
    "immer": "^7.0.9",
    "jsdom": "^16.4.0",
    "jsdom-global": "^3.0.2",
    "lerna": "^3.22.1",
    "lodash": "^4.17.20",
    "mocha": "^8.0.1",
    "mochawesome": "^6.1.1",
    "nock": "^13.0.4",
    "nodemon": "^2.0.4",
    "nyc": "^15.1.0",
    "prettier": "^2.1.2",
    "rollup": "^2.33.2",
    "rollup-plugin-filesize": "^9.0.2",
    "rollup-plugin-peer-deps-external": "^2.2.2",
    "rollup-plugin-progress": "^1.1.2",
    "rollup-plugin-terser": "^7.0.2",
    "rollup-plugin-typescript2": "^0.27.1",
    "sinon": "^9.0.2",
    "sinon-chai": "^3.5.0",
    "source-map-support": "^0.5.19",
    "style-loader": "^1.2.1",
    "terser-webpack-plugin": "^4.2.2",
    "ts-loader": "^8.0.3",
    "ts-mocha": "^8.0.0",
    "ts-node": "^9.0.0",
    "ts-node-dev": "^1.0.0",
    "tsconfig-paths": "^3.9.0",
    "twilio-video": "^2.7.2",
    "typescript": "^4.0.5",
    "webpack": "^4.44.1",
    "webpack-cli": "^3.3.12",
    "webpack-dev-server": "^3.11.0",
    "webpack-node-externals": "^2.5.2",
    "yaml": "^1.10.0"
  },
  "eslintConfig": {
    "root": true,
    "parser": "@typescript-eslint/parser",
    "parserOptions": {
      "project": "./tsconfig.json",
      "sourceType": "module"
    },
    "extends": [
      "airbnb",
      "eslint:recommended",
      "plugin:@typescript-eslint/eslint-recommended",
      "plugin:@typescript-eslint/recommended",
      "prettier"
    ],
    "plugins": [
      "@typescript-eslint",
      "prettier"
    ],
    "env": {
      "browser": true,
      "es6": true
    },
    "settings": {
      "import/resolver": {
        "node": {
          "moduleDirectory": [
            "node_modules",
            "src"
          ]
        }
      }
    },
    "rules": {
      "no-template-curly-in-string": "off",
      "eqeqeq": 0
    }
  },
  "prettier": {
    "arrowParens": "always",
    "endOfLine": "lf",
    "printWidth": 80,
    "semi": false,
    "singleQuote": true,
    "tabWidth": 2,
    "trailingComma": "all"
  }
}
