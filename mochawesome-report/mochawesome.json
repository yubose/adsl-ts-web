{
  "stats": {
    "suites": 8,
    "tests": 23,
    "passes": 3,
    "pending": 19,
    "failures": 1,
    "start": "2020-11-01T13:59:21.587Z",
    "end": "2020-11-01T13:59:21.700Z",
    "duration": 113,
    "testsRegistered": 23,
    "passPercent": 75,
    "pendingPercent": 82.6086956521739,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "f39939ac-37cf-4e40-8ab5-41856264d635",
      "title": "",
      "fullFile": "",
      "file": "",
      "beforeHooks": [
        {
          "title": "\"before all\" hook in \"{root}\"",
          "fullTitle": "\"before all\" hook in \"{root}\"",
          "timedOut": false,
          "duration": 3,
          "state": null,
          "speed": null,
          "pass": false,
          "fail": false,
          "pending": false,
          "context": null,
          "code": "console.clear();\nlogsnap_1.default.disable();\n// Silence all the logging from our custom logger\n// Logger.create = sinon.stub().callsFake(() =>\n//   _.reduce(\n//     _.keys(_color),\n//     (acc: any, color) => {\n//       acc[color] = _.noop\n//       return acc\n//     },\n//     {},\n//   ),\n// )\ntry {\n    logSpy = sinon_1.default.stub(global.console, 'log').callsFake(() => lodash_1.default.noop);\n    // logsnapSpy = sinon.stub(Logger, 'create').callsFake(() => _.noop as any)\n}\ncatch (error) { }",
          "err": {},
          "uuid": "6c8de6ba-0d06-4f5f-b016-d2a6fdb6ea58",
          "parentUUID": "f39939ac-37cf-4e40-8ab5-41856264d635",
          "isHook": true,
          "skipped": false
        },
        {
          "title": "\"before each\" hook in \"{root}\"",
          "fullTitle": "\"before each\" hook in \"{root}\"",
          "timedOut": false,
          "duration": 0,
          "state": null,
          "speed": null,
          "pass": false,
          "fail": false,
          "pending": false,
          "context": null,
          "code": "test_utils_1.noodlui.cleanup();",
          "err": {},
          "uuid": "f3df66bc-ed8f-4f6f-a918-d767ac3a1ef1",
          "parentUUID": "f39939ac-37cf-4e40-8ab5-41856264d635",
          "isHook": true,
          "skipped": false
        }
      ],
      "afterHooks": [
        {
          "title": "\"after all\" hook in \"{root}\"",
          "fullTitle": "\"after all\" hook in \"{root}\"",
          "timedOut": false,
          "duration": 0,
          "state": null,
          "speed": null,
          "pass": false,
          "fail": false,
          "pending": false,
          "context": null,
          "code": "var _a;\n(_a = logSpy === null || logSpy === void 0 ? void 0 : logSpy.restore) === null || _a === void 0 ? void 0 : _a.call(logSpy);\n// logsnapSpy?.restore?.()",
          "err": {},
          "uuid": "c7483eed-01b2-4f4d-a0c4-3fb2d798247e",
          "parentUUID": "f39939ac-37cf-4e40-8ab5-41856264d635",
          "isHook": true,
          "skipped": false
        },
        {
          "title": "\"after each\" hook in \"{root}\"",
          "fullTitle": "\"after each\" hook in \"{root}\"",
          "timedOut": false,
          "duration": 0,
          "state": null,
          "speed": null,
          "pass": false,
          "fail": false,
          "pending": false,
          "context": null,
          "code": "document.body.textContent = '';",
          "err": {},
          "uuid": "852aa4a4-9cea-44d8-8872-c708cc4d2e3a",
          "parentUUID": "f39939ac-37cf-4e40-8ab5-41856264d635",
          "isHook": true,
          "skipped": false
        }
      ],
      "tests": [],
      "suites": [
        {
          "uuid": "78b669fc-7655-47e8-8219-284c478964a7",
          "title": "hello",
          "fullFile": "C:\\Users\\Chris\\aitmed-noodl-web\\packages\\noodl-ui\\src\\resolvers\\__tests__\\_internal\\handleList.test.ts",
          "file": "\\packages\\noodl-ui\\src\\resolvers\\__tests__\\_internal\\handleList.test.ts",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "",
              "fullTitle": "hello ",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// throw new Error('fsa')",
              "err": {},
              "uuid": "589158f3-3f49-4794-a9a0-c3a5c442f04a",
              "parentUUID": "78b669fc-7655-47e8-8219-284c478964a7",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "589158f3-3f49-4794-a9a0-c3a5c442f04a"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "1e0ca956-38b6-4b89-86ec-7ff96766c5d9",
          "title": "ListComponent",
          "fullFile": "C:\\Users\\Chris\\aitmed-noodl-web\\packages\\noodl-ui\\src\\__tests__\\List.test.ts",
          "file": "\\packages\\noodl-ui\\src\\__tests__\\List.test.ts",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should return the list data (from nodes)",
              "fullTitle": "ListComponent should return the list data (from nodes)",
              "timedOut": false,
              "duration": 0,
              "state": "pending",
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": true,
              "context": null,
              "code": "",
              "err": {},
              "uuid": "eb2d6760-3dde-4048-af31-164607476b93",
              "parentUUID": "1e0ca956-38b6-4b89-86ec-7ff96766c5d9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should return the iteratorVar",
              "fullTitle": "ListComponent should return the iteratorVar",
              "timedOut": false,
              "duration": 0,
              "state": "pending",
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": true,
              "context": null,
              "code": "",
              "err": {},
              "uuid": "ef042703-8c76-40d2-906d-7706a0398793",
              "parentUUID": "1e0ca956-38b6-4b89-86ec-7ff96766c5d9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should update the list data in the state when set is setting a new listObject",
              "fullTitle": "ListComponent should update the list data in the state when set is setting a new listObject",
              "timedOut": false,
              "duration": 0,
              "state": "pending",
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": true,
              "context": null,
              "code": "",
              "err": {},
              "uuid": "ac640874-8748-4bf2-82de-dfec63a14677",
              "parentUUID": "1e0ca956-38b6-4b89-86ec-7ff96766c5d9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should automatically add type: list if no args",
              "fullTitle": "ListComponent should automatically add type: list if no args",
              "timedOut": false,
              "duration": 0,
              "state": "pending",
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": true,
              "context": null,
              "code": "",
              "err": {},
              "uuid": "3f1e9c78-445e-4d38-89a0-ea23d0bb4b38",
              "parentUUID": "1e0ca956-38b6-4b89-86ec-7ff96766c5d9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should add the child to list state only if its a listItem child",
              "fullTitle": "ListComponent should add the child to list state only if its a listItem child",
              "timedOut": false,
              "duration": 0,
              "state": "pending",
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": true,
              "context": null,
              "code": "",
              "err": {},
              "uuid": "e59f873a-7987-4659-b296-6bf51f47a649",
              "parentUUID": "1e0ca956-38b6-4b89-86ec-7ff96766c5d9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should still add the child to the base state if its not a listItem child",
              "fullTitle": "ListComponent should still add the child to the base state if its not a listItem child",
              "timedOut": false,
              "duration": 0,
              "state": "pending",
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": true,
              "context": null,
              "code": "",
              "err": {},
              "uuid": "9f554ed9-6d91-44a2-8b99-adff12527d66",
              "parentUUID": "1e0ca956-38b6-4b89-86ec-7ff96766c5d9",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [
            {
              "uuid": "829d4fc0-da2d-4166-86ea-e4249f33808b",
              "title": "initiation",
              "fullFile": "C:\\Users\\Chris\\aitmed-noodl-web\\packages\\noodl-ui\\src\\__tests__\\List.test.ts",
              "file": "\\packages\\noodl-ui\\src\\__tests__\\List.test.ts",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should set the list object data",
                  "fullTitle": "ListComponent initiation should set the list object data",
                  "timedOut": false,
                  "duration": 3,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const args = { iteratorVar: 'colorful', listObject: ['fruits'] };\nconst noodlComponent = mockData_1.mock.raw.getNOODLList(args);\nconst component = generateListComponent(noodlComponent);\nchai_1.expect(component.getData()).to.equal(args.listObject);",
                  "err": {},
                  "uuid": "612401ad-aa2a-4b39-b2eb-df5254c8959b",
                  "parentUUID": "829d4fc0-da2d-4166-86ea-e4249f33808b",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should set the iteratorVar",
                  "fullTitle": "ListComponent initiation should set the iteratorVar",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const noodlComponent = mockData_1.mock.raw.getNOODLList({ iteratorVar: 'colorful' });\nconst component = generateListComponent(noodlComponent);\nchai_1.expect(component.iteratorVar).to.equal(noodlComponent.iteratorVar);",
                  "err": {},
                  "uuid": "10a3c5e1-3e6d-4752-89ed-899a8bc62bec",
                  "parentUUID": "829d4fc0-da2d-4166-86ea-e4249f33808b",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "612401ad-aa2a-4b39-b2eb-df5254c8959b",
                "10a3c5e1-3e6d-4752-89ed-899a8bc62bec"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 4,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "3657ce39-b360-4a17-8eef-cf28f239450b",
              "title": "behavior",
              "fullFile": "C:\\Users\\Chris\\aitmed-noodl-web\\packages\\noodl-ui\\src\\__tests__\\List.test.ts",
              "file": "\\packages\\noodl-ui\\src\\__tests__\\List.test.ts",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should update the blueprint when setting new list data",
                  "fullTitle": "ListComponent behavior should update the blueprint when setting new list data",
                  "timedOut": false,
                  "duration": 0,
                  "state": "pending",
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": true,
                  "context": null,
                  "code": "",
                  "err": {},
                  "uuid": "b8c80b70-3c2b-40ef-b18d-ed28f8aadbbe",
                  "parentUUID": "3657ce39-b360-4a17-8eef-cf28f239450b",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "",
                  "fullTitle": "ListComponent behavior ",
                  "timedOut": false,
                  "duration": 0,
                  "state": "pending",
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": true,
                  "context": null,
                  "code": "",
                  "err": {},
                  "uuid": "fcea3ad4-2d38-4f07-b6c3-ffe1a33af5a5",
                  "parentUUID": "3657ce39-b360-4a17-8eef-cf28f239450b",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "",
                  "fullTitle": "ListComponent behavior ",
                  "timedOut": false,
                  "duration": 0,
                  "state": "pending",
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": true,
                  "context": null,
                  "code": "",
                  "err": {},
                  "uuid": "217b474d-6645-4eea-9e5d-cb2abb847964",
                  "parentUUID": "3657ce39-b360-4a17-8eef-cf28f239450b",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [],
              "failures": [],
              "pending": [
                "b8c80b70-3c2b-40ef-b18d-ed28f8aadbbe",
                "fcea3ad4-2d38-4f07-b6c3-ffe1a33af5a5",
                "217b474d-6645-4eea-9e5d-cb2abb847964"
              ],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "9450742b-ecb8-4c39-9652-25a4f45d620b",
              "title": "blueprint",
              "fullFile": "C:\\Users\\Chris\\aitmed-noodl-web\\packages\\noodl-ui\\src\\__tests__\\List.test.ts",
              "file": "\\packages\\noodl-ui\\src\\__tests__\\List.test.ts",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should return the blueprint from the list item if a list item exists",
                  "fullTitle": "ListComponent blueprint should return the blueprint from the list item if a list item exists",
                  "timedOut": false,
                  "duration": 34,
                  "state": "failed",
                  "speed": null,
                  "pass": false,
                  "fail": true,
                  "pending": false,
                  "context": null,
                  "code": "var _a, _b;\nconst component = new List_1.default({\n    iteratorVar: 'apple',\n    listObject: [{ age: 18 }, { age: 28 }, { age: 8 }],\n});\nconst listId = component.listId;\nconst listItem1 = component.createChild('listItem');\nlistItem1 === null || listItem1 === void 0 ? void 0 : listItem1.setStyle('borderWidth', '5px').setStyle('fontSize', '14px');\n(_a = listItem1 === null || listItem1 === void 0 ? void 0 : listItem1.createChild('label')) === null || _a === void 0 ? void 0 : _a.set('text', 'hello all');\n(_b = listItem1 === null || listItem1 === void 0 ? void 0 : listItem1.createChild('label')) === null || _b === void 0 ? void 0 : _b.set('text', 'today is sunday');\nconst blueprint = component.getBlueprint();\nconsole.info('BLUEPRINT');\nconsole.info(blueprint);\nconsole.info('BLUEPRINT');\nchai_1.expect(blueprint.style).to.have.property('borderWidth', '5px');\nchai_1.expect(blueprint.style).to.have.property('fontSize', '14px');\nchai_1.expect(blueprint.children).to.be.an('array');\nchai_1.expect(blueprint.children[0].get('text')).to.equal('hello all');\nchai_1.expect(blueprint.children[1].get('text')).to.equal('today is sunday');\nchai_1.expect(blueprint.children[0].get('listId')).equal(listId);\nchai_1.expect(blueprint.children[1].get('listId')).to.equal('today is sunday');",
                  "err": {
                    "message": "AssertionError: expected undefined to equal '_bnahyqps3'",
                    "estack": "AssertionError: expected undefined to equal '_bnahyqps3'\n    at Context.<anonymous> (packages\\noodl-ui\\src\\__tests__\\List.test.ts:107:13)\n    at processImmediate (internal/timers.js:456:21)",
                    "diff": null
                  },
                  "uuid": "e65ce32f-c14c-4476-a540-ed1cc53a6b35",
                  "parentUUID": "9450742b-ecb8-4c39-9652-25a4f45d620b",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should return the blueprint from the raw noodl children child",
                  "fullTitle": "ListComponent blueprint should return the blueprint from the raw noodl children child",
                  "timedOut": false,
                  "duration": 0,
                  "state": "pending",
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": true,
                  "context": null,
                  "code": "",
                  "err": {},
                  "uuid": "88f8028b-bee6-4b56-8cad-8b96a1ffa664",
                  "parentUUID": "9450742b-ecb8-4c39-9652-25a4f45d620b",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [],
              "failures": [
                "e65ce32f-c14c-4476-a540-ed1cc53a6b35"
              ],
              "pending": [
                "88f8028b-bee6-4b56-8cad-8b96a1ffa664"
              ],
              "skipped": [],
              "duration": 34,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "c3bce36d-8126-43ba-8f87-64f9a52d145f",
              "title": "retrieving dataObjects from list item children",
              "fullFile": "C:\\Users\\Chris\\aitmed-noodl-web\\packages\\noodl-ui\\src\\__tests__\\List.test.ts",
              "file": "\\packages\\noodl-ui\\src\\__tests__\\List.test.ts",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should be able to retrieve a data object for a list item using the child instance",
                  "fullTitle": "ListComponent retrieving dataObjects from list item children should be able to retrieve a data object for a list item using the child instance",
                  "timedOut": false,
                  "duration": 0,
                  "state": "pending",
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": true,
                  "context": null,
                  "code": "",
                  "err": {},
                  "uuid": "c46e1523-3d54-4543-9539-019082c16122",
                  "parentUUID": "c3bce36d-8126-43ba-8f87-64f9a52d145f",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should be able to retrieve a data object for a list item using the child id",
                  "fullTitle": "ListComponent retrieving dataObjects from list item children should be able to retrieve a data object for a list item using the child id",
                  "timedOut": false,
                  "duration": 0,
                  "state": "pending",
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": true,
                  "context": null,
                  "code": "",
                  "err": {},
                  "uuid": "f140b892-ed83-4967-bec9-e21193868792",
                  "parentUUID": "c3bce36d-8126-43ba-8f87-64f9a52d145f",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should be able to retrieve a data object for a list item using the index position",
                  "fullTitle": "ListComponent retrieving dataObjects from list item children should be able to retrieve a data object for a list item using the index position",
                  "timedOut": false,
                  "duration": 0,
                  "state": "pending",
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": true,
                  "context": null,
                  "code": "",
                  "err": {},
                  "uuid": "df65bd17-6103-4cc6-be20-7b7864266d23",
                  "parentUUID": "c3bce36d-8126-43ba-8f87-64f9a52d145f",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should return dataObjects from list item children",
                  "fullTitle": "ListComponent retrieving dataObjects from list item children should return dataObjects from list item children",
                  "timedOut": false,
                  "duration": 0,
                  "state": "pending",
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": true,
                  "context": null,
                  "code": "",
                  "err": {},
                  "uuid": "03426e04-ddaf-4d34-a1ec-063d0991e8a2",
                  "parentUUID": "c3bce36d-8126-43ba-8f87-64f9a52d145f",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [],
              "failures": [],
              "pending": [
                "c46e1523-3d54-4543-9539-019082c16122",
                "f140b892-ed83-4967-bec9-e21193868792",
                "df65bd17-6103-4cc6-be20-7b7864266d23",
                "03426e04-ddaf-4d34-a1ec-063d0991e8a2"
              ],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "33bfa470-bd70-4a11-b65d-b61979b4571b",
              "title": "family tree",
              "fullFile": "C:\\Users\\Chris\\aitmed-noodl-web\\packages\\noodl-ui\\src\\__tests__\\List.test.ts",
              "file": "\\packages\\noodl-ui\\src\\__tests__\\List.test.ts",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should be able to reference parent list component instances from children",
                  "fullTitle": "ListComponent family tree should be able to reference parent list component instances from children",
                  "timedOut": false,
                  "duration": 0,
                  "state": "pending",
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": true,
                  "context": null,
                  "code": "",
                  "err": {},
                  "uuid": "c8e0d7bc-6c5a-442b-8b0d-81f140eabe5e",
                  "parentUUID": "33bfa470-bd70-4a11-b65d-b61979b4571b",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [],
              "failures": [],
              "pending": [
                "c8e0d7bc-6c5a-442b-8b0d-81f140eabe5e"
              ],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "0edfcef7-b99f-40b3-b2bd-c83d457146d3",
              "title": "setting listObject",
              "fullFile": "C:\\Users\\Chris\\aitmed-noodl-web\\packages\\noodl-ui\\src\\__tests__\\List.test.ts",
              "file": "\\packages\\noodl-ui\\src\\__tests__\\List.test.ts",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should have a data object assign to every child ",
                  "fullTitle": "ListComponent setting listObject should have a data object assign to every child ",
                  "timedOut": false,
                  "duration": 0,
                  "state": "pending",
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": true,
                  "context": null,
                  "code": "",
                  "err": {},
                  "uuid": "3f3b5125-b400-41d4-977b-c6ddbba601e5",
                  "parentUUID": "0edfcef7-b99f-40b3-b2bd-c83d457146d3",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should have created list item components for additional data objects",
                  "fullTitle": "ListComponent setting listObject should have created list item components for additional data objects",
                  "timedOut": false,
                  "duration": 0,
                  "state": "pending",
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": true,
                  "context": null,
                  "code": "",
                  "err": {},
                  "uuid": "59bb97fe-3883-4224-bb62-0988b453650c",
                  "parentUUID": "0edfcef7-b99f-40b3-b2bd-c83d457146d3",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should have removed list item components to match the length of the new listObject",
                  "fullTitle": "ListComponent setting listObject should have removed list item components to match the length of the new listObject",
                  "timedOut": false,
                  "duration": 0,
                  "state": "pending",
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": true,
                  "context": null,
                  "code": "",
                  "err": {},
                  "uuid": "fa514a6d-da6b-41e5-a09d-c3225d671a5b",
                  "parentUUID": "0edfcef7-b99f-40b3-b2bd-c83d457146d3",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should refresh all of its children's data object to align the order of the list data",
                  "fullTitle": "ListComponent setting listObject should refresh all of its children's data object to align the order of the list data",
                  "timedOut": false,
                  "duration": 0,
                  "state": "pending",
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": true,
                  "context": null,
                  "code": "",
                  "err": {},
                  "uuid": "bfff3822-ec39-4038-ba0a-f2de1201f585",
                  "parentUUID": "0edfcef7-b99f-40b3-b2bd-c83d457146d3",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [],
              "failures": [],
              "pending": [
                "3f3b5125-b400-41d4-977b-c6ddbba601e5",
                "59bb97fe-3883-4224-bb62-0988b453650c",
                "fa514a6d-da6b-41e5-a09d-c3225d671a5b",
                "bfff3822-ec39-4038-ba0a-f2de1201f585"
              ],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [
            "eb2d6760-3dde-4048-af31-164607476b93",
            "ef042703-8c76-40d2-906d-7706a0398793",
            "ac640874-8748-4bf2-82de-dfec63a14677",
            "3f1e9c78-445e-4d38-89a0-ea23d0bb4b38",
            "e59f873a-7987-4659-b296-6bf51f47a649",
            "9f554ed9-6d91-44a2-8b99-adff12527d66"
          ],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "8.2.0"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "6.1.1"
    },
    "marge": {
      "options": null,
      "version": "5.1.0"
    }
  }
}