{
  "stats": {
    "suites": 8,
    "tests": 22,
    "passes": 3,
    "pending": 19,
    "failures": 0,
    "start": "2020-10-31T00:10:34.827Z",
    "end": "2020-10-31T00:10:34.864Z",
    "duration": 37,
    "testsRegistered": 22,
    "passPercent": 100,
    "pendingPercent": 86.36363636363636,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "7ced02a6-26a7-4f83-b10e-df2ac5ef6d61",
      "title": "",
      "fullFile": "",
      "file": "",
      "beforeHooks": [
        {
          "title": "\"before all\" hook in \"{root}\"",
          "fullTitle": "\"before all\" hook in \"{root}\"",
          "timedOut": false,
          "duration": 2,
          "state": null,
          "speed": null,
          "pass": false,
          "fail": false,
          "pending": false,
          "context": null,
          "code": "console.clear();\nlogsnap_1.default.disable();\n// Silence all the logging from our custom logger\n// Logger.create = sinon.stub().callsFake(() =>\n//   _.reduce(\n//     _.keys(_color),\n//     (acc: any, color) => {\n//       acc[color] = _.noop\n//       return acc\n//     },\n//     {},\n//   ),\n// )\ntry {\n    logSpy = sinon_1.default.stub(global.console, 'log').callsFake(() => lodash_1.default.noop);\n    // logsnapSpy = sinon.stub(Logger, 'create').callsFake(() => _.noop as any)\n}\ncatch (error) { }",
          "err": {},
          "uuid": "90838ab3-4b15-4ff8-972a-5b20fc51393a",
          "parentUUID": "7ced02a6-26a7-4f83-b10e-df2ac5ef6d61",
          "isHook": true,
          "skipped": false
        },
        {
          "title": "\"before each\" hook in \"{root}\"",
          "fullTitle": "\"before each\" hook in \"{root}\"",
          "timedOut": false,
          "duration": 0,
          "state": null,
          "speed": null,
          "pass": false,
          "fail": false,
          "pending": false,
          "context": null,
          "code": "test_utils_1.noodlui.cleanup();",
          "err": {},
          "uuid": "697a2e4a-b963-4a94-bd96-1b15794765b3",
          "parentUUID": "7ced02a6-26a7-4f83-b10e-df2ac5ef6d61",
          "isHook": true,
          "skipped": false
        }
      ],
      "afterHooks": [
        {
          "title": "\"after all\" hook in \"{root}\"",
          "fullTitle": "\"after all\" hook in \"{root}\"",
          "timedOut": false,
          "duration": 0,
          "state": null,
          "speed": null,
          "pass": false,
          "fail": false,
          "pending": false,
          "context": null,
          "code": "var _a;\n(_a = logSpy === null || logSpy === void 0 ? void 0 : logSpy.restore) === null || _a === void 0 ? void 0 : _a.call(logSpy);\n// logsnapSpy?.restore?.()",
          "err": {},
          "uuid": "2b7dd3d5-0ebb-42a6-b4ca-ff21a0115a0f",
          "parentUUID": "7ced02a6-26a7-4f83-b10e-df2ac5ef6d61",
          "isHook": true,
          "skipped": false
        },
        {
          "title": "\"after each\" hook in \"{root}\"",
          "fullTitle": "\"after each\" hook in \"{root}\"",
          "timedOut": false,
          "duration": 1,
          "state": null,
          "speed": null,
          "pass": false,
          "fail": false,
          "pending": false,
          "context": null,
          "code": "document.body.textContent = '';",
          "err": {},
          "uuid": "ba022aa8-8c49-4f9b-a748-a2197d51da7e",
          "parentUUID": "7ced02a6-26a7-4f83-b10e-df2ac5ef6d61",
          "isHook": true,
          "skipped": false
        }
      ],
      "tests": [],
      "suites": [
        {
          "uuid": "85b9744f-1a0c-4503-8e80-85b8fc9df984",
          "title": "hello",
          "fullFile": "C:\\Users\\Chris\\aitmed-noodl-web\\packages\\noodl-ui\\src\\resolvers\\__tests__\\_internal\\handleList.test.ts",
          "file": "\\packages\\noodl-ui\\src\\resolvers\\__tests__\\_internal\\handleList.test.ts",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "",
              "fullTitle": "hello ",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// throw new Error('fsa')",
              "err": {},
              "uuid": "b72ce850-0a91-4cb1-b546-0bb230f0b7b2",
              "parentUUID": "85b9744f-1a0c-4503-8e80-85b8fc9df984",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "b72ce850-0a91-4cb1-b546-0bb230f0b7b2"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "d56ce9be-9da4-45a3-a79f-8ed81db0a691",
          "title": "ListComponent",
          "fullFile": "C:\\Users\\Chris\\aitmed-noodl-web\\packages\\noodl-ui\\src\\__tests__\\ListComponent.test.ts",
          "file": "\\packages\\noodl-ui\\src\\__tests__\\ListComponent.test.ts",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should return the list data (from nodes)",
              "fullTitle": "ListComponent should return the list data (from nodes)",
              "timedOut": false,
              "duration": 0,
              "state": "pending",
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": true,
              "context": null,
              "code": "",
              "err": {},
              "uuid": "29621101-7c21-4e36-9f45-e7f45271d03c",
              "parentUUID": "d56ce9be-9da4-45a3-a79f-8ed81db0a691",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should return the iteratorVar",
              "fullTitle": "ListComponent should return the iteratorVar",
              "timedOut": false,
              "duration": 0,
              "state": "pending",
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": true,
              "context": null,
              "code": "",
              "err": {},
              "uuid": "f887f422-a364-43af-9f86-6eb144cf2088",
              "parentUUID": "d56ce9be-9da4-45a3-a79f-8ed81db0a691",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should update the list data in the state when set is setting a new listObject",
              "fullTitle": "ListComponent should update the list data in the state when set is setting a new listObject",
              "timedOut": false,
              "duration": 0,
              "state": "pending",
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": true,
              "context": null,
              "code": "",
              "err": {},
              "uuid": "e7d9b040-1c17-45b2-abe7-bdcf294e1244",
              "parentUUID": "d56ce9be-9da4-45a3-a79f-8ed81db0a691",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should automatically add type: list if no args",
              "fullTitle": "ListComponent should automatically add type: list if no args",
              "timedOut": false,
              "duration": 0,
              "state": "pending",
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": true,
              "context": null,
              "code": "",
              "err": {},
              "uuid": "71f477b0-0013-46c6-91d7-30c74f725a73",
              "parentUUID": "d56ce9be-9da4-45a3-a79f-8ed81db0a691",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should add the child to list state only if its a listItem child",
              "fullTitle": "ListComponent should add the child to list state only if its a listItem child",
              "timedOut": false,
              "duration": 0,
              "state": "pending",
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": true,
              "context": null,
              "code": "",
              "err": {},
              "uuid": "3e960aa8-8259-4b65-b9bc-8ad45becbba1",
              "parentUUID": "d56ce9be-9da4-45a3-a79f-8ed81db0a691",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should still add the child to the base state if its not a listItem child",
              "fullTitle": "ListComponent should still add the child to the base state if its not a listItem child",
              "timedOut": false,
              "duration": 0,
              "state": "pending",
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": true,
              "context": null,
              "code": "",
              "err": {},
              "uuid": "493f8363-daba-4637-8498-c00bc17455e0",
              "parentUUID": "d56ce9be-9da4-45a3-a79f-8ed81db0a691",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [
            {
              "uuid": "f34f0ae1-4ad4-463c-9159-95d067304b80",
              "title": "initiation",
              "fullFile": "C:\\Users\\Chris\\aitmed-noodl-web\\packages\\noodl-ui\\src\\__tests__\\ListComponent.test.ts",
              "file": "\\packages\\noodl-ui\\src\\__tests__\\ListComponent.test.ts",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should set the list object data",
                  "fullTitle": "ListComponent initiation should set the list object data",
                  "timedOut": false,
                  "duration": 2,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const args = { iteratorVar: 'colorful', listObject: ['fruits'] };\nconst noodlComponent = mockData_1.mock.raw.getNOODLList(args);\nconst component = generateListComponent(noodlComponent);\nchai_1.expect(component.getData()).to.equal(args.listObject);",
                  "err": {},
                  "uuid": "85ae9424-ab01-4b1e-8763-07028e82faec",
                  "parentUUID": "f34f0ae1-4ad4-463c-9159-95d067304b80",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should set the iteratorVar",
                  "fullTitle": "ListComponent initiation should set the iteratorVar",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const noodlComponent = mockData_1.mock.raw.getNOODLList({ iteratorVar: 'colorful' });\nconst component = generateListComponent(noodlComponent);\nchai_1.expect(component.iteratorVar).to.equal(noodlComponent.iteratorVar);",
                  "err": {},
                  "uuid": "7c9cc1fd-b103-4668-a9b7-0447694d1595",
                  "parentUUID": "f34f0ae1-4ad4-463c-9159-95d067304b80",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "85ae9424-ab01-4b1e-8763-07028e82faec",
                "7c9cc1fd-b103-4668-a9b7-0447694d1595"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 3,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "2b173547-ec54-4f45-8686-43d9ac8db1f7",
              "title": "behavior",
              "fullFile": "C:\\Users\\Chris\\aitmed-noodl-web\\packages\\noodl-ui\\src\\__tests__\\ListComponent.test.ts",
              "file": "\\packages\\noodl-ui\\src\\__tests__\\ListComponent.test.ts",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should update the blueprint when setting new list data",
                  "fullTitle": "ListComponent behavior should update the blueprint when setting new list data",
                  "timedOut": false,
                  "duration": 0,
                  "state": "pending",
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": true,
                  "context": null,
                  "code": "",
                  "err": {},
                  "uuid": "a60520f1-7acc-4bdc-ac14-f25d92d6a044",
                  "parentUUID": "2b173547-ec54-4f45-8686-43d9ac8db1f7",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "",
                  "fullTitle": "ListComponent behavior ",
                  "timedOut": false,
                  "duration": 0,
                  "state": "pending",
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": true,
                  "context": null,
                  "code": "",
                  "err": {},
                  "uuid": "9bb3db39-b4b0-4a10-aed5-b38136b7043f",
                  "parentUUID": "2b173547-ec54-4f45-8686-43d9ac8db1f7",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "",
                  "fullTitle": "ListComponent behavior ",
                  "timedOut": false,
                  "duration": 0,
                  "state": "pending",
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": true,
                  "context": null,
                  "code": "",
                  "err": {},
                  "uuid": "07b4f62e-a893-428e-a185-445e1318f0a2",
                  "parentUUID": "2b173547-ec54-4f45-8686-43d9ac8db1f7",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [],
              "failures": [],
              "pending": [
                "a60520f1-7acc-4bdc-ac14-f25d92d6a044",
                "9bb3db39-b4b0-4a10-aed5-b38136b7043f",
                "07b4f62e-a893-428e-a185-445e1318f0a2"
              ],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "931206ec-d0f8-4a43-9dae-3037b2d193fa",
              "title": "blueprint",
              "fullFile": "C:\\Users\\Chris\\aitmed-noodl-web\\packages\\noodl-ui\\src\\__tests__\\ListComponent.test.ts",
              "file": "\\packages\\noodl-ui\\src\\__tests__\\ListComponent.test.ts",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should allow us to set the next blueprint and update the list item nodes",
                  "fullTitle": "ListComponent blueprint should allow us to set the next blueprint and update the list item nodes",
                  "timedOut": false,
                  "duration": 0,
                  "state": "pending",
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": true,
                  "context": null,
                  "code": "",
                  "err": {},
                  "uuid": "204536d8-13a2-4df3-b2a1-ee36290abbab",
                  "parentUUID": "931206ec-d0f8-4a43-9dae-3037b2d193fa",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [],
              "failures": [],
              "pending": [
                "204536d8-13a2-4df3-b2a1-ee36290abbab"
              ],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "170d3b1d-2edf-4e11-8176-9fd98d487328",
              "title": "retrieving dataObjects from list item children",
              "fullFile": "C:\\Users\\Chris\\aitmed-noodl-web\\packages\\noodl-ui\\src\\__tests__\\ListComponent.test.ts",
              "file": "\\packages\\noodl-ui\\src\\__tests__\\ListComponent.test.ts",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should be able to retrieve a data object for a list item using the child instance",
                  "fullTitle": "ListComponent retrieving dataObjects from list item children should be able to retrieve a data object for a list item using the child instance",
                  "timedOut": false,
                  "duration": 0,
                  "state": "pending",
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": true,
                  "context": null,
                  "code": "",
                  "err": {},
                  "uuid": "6a63e2e5-a6bb-4c4a-b8a8-540d2af0e831",
                  "parentUUID": "170d3b1d-2edf-4e11-8176-9fd98d487328",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should be able to retrieve a data object for a list item using the child id",
                  "fullTitle": "ListComponent retrieving dataObjects from list item children should be able to retrieve a data object for a list item using the child id",
                  "timedOut": false,
                  "duration": 0,
                  "state": "pending",
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": true,
                  "context": null,
                  "code": "",
                  "err": {},
                  "uuid": "25c6ef44-214c-4f4e-afc6-054d3ae2e2d3",
                  "parentUUID": "170d3b1d-2edf-4e11-8176-9fd98d487328",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should be able to retrieve a data object for a list item using the index position",
                  "fullTitle": "ListComponent retrieving dataObjects from list item children should be able to retrieve a data object for a list item using the index position",
                  "timedOut": false,
                  "duration": 0,
                  "state": "pending",
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": true,
                  "context": null,
                  "code": "",
                  "err": {},
                  "uuid": "bfc6cc30-bc69-46af-88cc-af8f674e8291",
                  "parentUUID": "170d3b1d-2edf-4e11-8176-9fd98d487328",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should return dataObjects from list item children",
                  "fullTitle": "ListComponent retrieving dataObjects from list item children should return dataObjects from list item children",
                  "timedOut": false,
                  "duration": 0,
                  "state": "pending",
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": true,
                  "context": null,
                  "code": "",
                  "err": {},
                  "uuid": "680ec136-32a2-47e4-bb74-a04d8ffa25c8",
                  "parentUUID": "170d3b1d-2edf-4e11-8176-9fd98d487328",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [],
              "failures": [],
              "pending": [
                "6a63e2e5-a6bb-4c4a-b8a8-540d2af0e831",
                "25c6ef44-214c-4f4e-afc6-054d3ae2e2d3",
                "bfc6cc30-bc69-46af-88cc-af8f674e8291",
                "680ec136-32a2-47e4-bb74-a04d8ffa25c8"
              ],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "c121044f-9beb-494a-b038-2ab7c62f5ac9",
              "title": "family tree",
              "fullFile": "C:\\Users\\Chris\\aitmed-noodl-web\\packages\\noodl-ui\\src\\__tests__\\ListComponent.test.ts",
              "file": "\\packages\\noodl-ui\\src\\__tests__\\ListComponent.test.ts",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should be able to reference parent list component instances from children",
                  "fullTitle": "ListComponent family tree should be able to reference parent list component instances from children",
                  "timedOut": false,
                  "duration": 0,
                  "state": "pending",
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": true,
                  "context": null,
                  "code": "",
                  "err": {},
                  "uuid": "0b398745-1208-41df-8a0b-25f593471ce5",
                  "parentUUID": "c121044f-9beb-494a-b038-2ab7c62f5ac9",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [],
              "failures": [],
              "pending": [
                "0b398745-1208-41df-8a0b-25f593471ce5"
              ],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "3dce7feb-f65e-47e2-84d6-597ccc211714",
              "title": "setting listObject",
              "fullFile": "C:\\Users\\Chris\\aitmed-noodl-web\\packages\\noodl-ui\\src\\__tests__\\ListComponent.test.ts",
              "file": "\\packages\\noodl-ui\\src\\__tests__\\ListComponent.test.ts",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should have a data object assign to every child ",
                  "fullTitle": "ListComponent setting listObject should have a data object assign to every child ",
                  "timedOut": false,
                  "duration": 0,
                  "state": "pending",
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": true,
                  "context": null,
                  "code": "",
                  "err": {},
                  "uuid": "85d7610f-23f7-4fc9-9cf5-dc070bf438c9",
                  "parentUUID": "3dce7feb-f65e-47e2-84d6-597ccc211714",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should have created list item components for additional data objects",
                  "fullTitle": "ListComponent setting listObject should have created list item components for additional data objects",
                  "timedOut": false,
                  "duration": 0,
                  "state": "pending",
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": true,
                  "context": null,
                  "code": "",
                  "err": {},
                  "uuid": "5380ecff-447f-4aff-ad80-54b9022942c8",
                  "parentUUID": "3dce7feb-f65e-47e2-84d6-597ccc211714",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should have removed list item components to match the length of the new listObject",
                  "fullTitle": "ListComponent setting listObject should have removed list item components to match the length of the new listObject",
                  "timedOut": false,
                  "duration": 0,
                  "state": "pending",
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": true,
                  "context": null,
                  "code": "",
                  "err": {},
                  "uuid": "15dc6d6d-9b11-4dcc-8a18-006967a8a12b",
                  "parentUUID": "3dce7feb-f65e-47e2-84d6-597ccc211714",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should refresh all of its children's data object to align the order of the list data",
                  "fullTitle": "ListComponent setting listObject should refresh all of its children's data object to align the order of the list data",
                  "timedOut": false,
                  "duration": 0,
                  "state": "pending",
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": true,
                  "context": null,
                  "code": "",
                  "err": {},
                  "uuid": "fade7ed6-d016-43b5-85cb-8619d3970f3b",
                  "parentUUID": "3dce7feb-f65e-47e2-84d6-597ccc211714",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [],
              "failures": [],
              "pending": [
                "85d7610f-23f7-4fc9-9cf5-dc070bf438c9",
                "5380ecff-447f-4aff-ad80-54b9022942c8",
                "15dc6d6d-9b11-4dcc-8a18-006967a8a12b",
                "fade7ed6-d016-43b5-85cb-8619d3970f3b"
              ],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [
            "29621101-7c21-4e36-9f45-e7f45271d03c",
            "f887f422-a364-43af-9f86-6eb144cf2088",
            "e7d9b040-1c17-45b2-abe7-bdcf294e1244",
            "71f477b0-0013-46c6-91d7-30c74f725a73",
            "3e960aa8-8259-4b65-b9bc-8ad45becbba1",
            "493f8363-daba-4637-8498-c00bc17455e0"
          ],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "8.2.0"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "6.1.1"
    },
    "marge": {
      "options": null,
      "version": "5.1.0"
    }
  }
}