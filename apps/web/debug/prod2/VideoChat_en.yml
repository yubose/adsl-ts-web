VideoChat:
  pageNumber: "190"
  init:
    - .SignInCheck
    - if:
        - =.Global.roomInfoDoc.document.deat.roomID # 'true', 'false'
        - continue
        - goto: Dashboard
    - actionType: evalObject
      object:
        .Global._nonce@:
          =.builtIn.math.random: ""
    - actionType: evalObject
      object:
        - ..cameraOn@: .Global.cameraOn
        - ..micOn@: .Global.micOn
    - actionType: builtIn
      funcName: videoChat
      roomId: .Global.roomInfoDoc.document.deat.roomID
      accessToken: .Global.roomInfoDoc.document.deat.accessToken
      timerTag: videoTimer
      timer: .Global.timer # timer object is to be removed after web and iOS implemented builtIn
  empty: ""
  cameraOn: "true"
  micOn: "true"
  miuAutoMicOffTimespan: "3" # seconds
  miuAutoMicOffThresdhold: "3" # mic volume calibrate between 0 to 9, <= 3 will turn micOff Automatically if user set the mic is on. Mic will not turn on automatically within the minAutoMicOffTimespan even a higher level of volumn detectec.
  apiRequest:
    appointment:
      edgeQueryResp: ""
      edgeQueryReq:
        id: .Global.roomInfo.edge.id
      edgeAPI:
        get:
          api: re
          dataIn: VideoChat.apiRequest.appointment.edgeQueryReq
          dataOut: VideoChat.apiRequest.appointment.edgeQueryResp
    # change meetingTag
    appointmentTag:
      docCreateResp: ""
      docCreateReq:
        name:
          data: ""
        type: .DocType.GroupBitOrTage
        eid: .Global.currentRoom.edge.id
        reid: .Global.currentRoom.edge.id
        tage: "0"
      docAPI:
        store:
          api: cd
          dataIn: VideoChat.apiRequest.appointmentTag.docCreateReq
          dataOut: VideoChat.apiRequest.appointmentTag.docCreateResp
    newVideoMessage:
      response: ""
      document:
        eid: .Global.currentRoom.edge.id
        reid: .Global.currentRoom.edge.id
        subtype:
          isOnServer: 1
          isZipped: 0
          isBinary: 0
          isEncrypted: 0
          isExtraKeyNeeded: 0
          isEditable: 0
          applicationDataType: 8
          # 7 th bit
          notification: 1
          ringToneNotify: 1
          sendtoSelf: 1
          # 10 bit
          textMessage: 0
          mediaType: 8
        type: 770
        tage: 5
        name:
          title: textMessage
          senderId: .Global.currentUser.vertex.id
          senderName: .Global.currentUser.vertex.name.userName
          data:
            text: ""
          notification:
            title: New Message From a Doctor
            context: click to open the chat page
            body: click to open the chat page
            onClickLandingPage: ChatPage
            targetApp: =.FirebaseToken.response.edge.evid
      docAPI:
        store:
          api: cd
          dataIn: apiRequest.newVideoMessage.document
          dataOut: apiRequest.newVideoMessage.response
  # N1 only RingTone
  sendNotification:
    document:
      .Document: ""
      eid: ""
      subtype:
        isOnServer: 1
        isZipped: 0
        isBinary: 0
        isEncrypted: 0
        isExtraKeyNeeded: 0
        isEditable: 0
        applicationDataType: 0
        # 7 th bit
        notification: 1
        ringToneNotify: 1
        sendtoSelf: 0
        # 10 bit
        textMessage: 0
        mediaType: 8
      type: .DocType.Notification
      tage: 2
      name:
        data: ""
        #        senderId: ".Global.currentUser.vertex.id"
        #        senderName: ".Global.currentUser.vertex.name.userName"
        #        data:
        #          text: ''
        notification:
          # The content of the notification won't be show since we dont show
          # banner for ringTone notification
          title: A Patient is calling you
          context: Please enter the virutal room
          body: Please enter the virutal room
          landingPage: RingTonePage
          onClickLandingPage: RingTonePage
          targetApp: =.FirebaseToken.response.edge.evid
    docAPI:
      store:
        api: cd
        dataIn: sendNotification.document

  emptyId: ""
  popUpList:
    # - text: "AppointmentLobby"
    #   pageName: "AppointmentLobby2"
    # - text: "Participants/Invite"
    #   pageName: "ParticipantsInvite"
    - text: "Medical Documents"
      pageName: "ProviderNotes"
    - text: "Appointment Lobby"
      pageName: "AppointmentLobby"
    # - text: "Share your screen"
    #   pageName: "ScreenShare"
  popUpListTemp: ""
  components:
    - type: popUp
      viewTag: underconstruction
      style:
        width: "1"
        height: "1"
        top: "0"
        left: "0"
        zIndex: "100"
        backgroundColor: "0x00000033"
      children:
        - type: view
          style:
            left: "0.14"
            top: "0.27"
            width: "0.72"
            height: "0.35"
            backgroundColor: "0xe1e1e1"
            borderRadius: "10"
          children:
            - type: image
              path: aitmedLogoBlack.svg
              style:
                left: "0.25"
                top: "0.02"
                width: "0.18"
            - type: label
              text: Start Screen Share
              style:
                left: "0"
                top: "0.13"
                width: "0.72"
                height: "0.05"
                fontSize: "18"
                fontWeight: "400"
                textAlign:
                  x: center
            - type: label
              text: Everything on your screen will be recorded,including any notifications.Enable Do Not Disturb to avoid notifications being seen.
              style:
                left: "0.08"
                top: "0.175"
                width: "0.56"
                height: "0.1"
                fontSize: "13"
                fontWeight: "400"
                textAlign:
                  x: center
            - type: divider
              style:
                left: "0"
                top: "0.286"
                width: "0.72"
                height: "0.001"
                backgroundColor: "0x8f8f8f"
            - type: divider
              style:
                left: "0.358"
                top: "0.286"
                width: "0.004"
                height: "0.054"
                backgroundColor: "0x8f8f8f"
            - type: button
              text: Cancel
              style:
                width: "0.358"
                left: "0"
                height: "0.052"
                top: "0.296"
                backgroundColor: "0xe1e1e1"
                fontSize: "18"
                color: "0x007bff"
                borderRadius: "10"
                borderWeight: "0"
                textAlign:
                  x: center
                  y: center
              onClick:
                - actionType: popUpDismiss
                  popUpView: underconstruction
            - type: button
              text: Start
              style:
                width: "0.358"
                left: "0.362"
                height: "0.052"
                top: "0.296"
                backgroundColor: "0xe1e1e1"
                fontSize: "18"
                color: "0x007bff"
                borderRadius: "10"
                borderWeight: "0"
                textAlign:
                  x: center
                  y: center
              onClick:
                - actionType: builtIn
                  funcName: screenShare
    - type: register
      onEvent: twilioOnPeopleShowRoom
      actions:
        - actionType: evalObject
          object:
            - ..sendNotification.document.fid@: =.Global.patdAPPID
            - ..sendNotification.document.eid@: =.Global.currentRoom.edge.id
            - =..sendNotification.docAPI.store: ""
    #            - =.builtIn.FCM.getAPPID:
    #                dataIn:
    #                  appName: =.TargetApp.patient
    #                dataOut: FirebaseToken.edge.evid
    #            - actionType: evalObject
    #              object: .Global.updateJwt
    # - ..sendNotification.document.fid@: =.Global.patdAPPID
    # - ..sendNotification.document.eid@: =.Global.currentRoom.edge.id
    # - =..sendNotification.docAPI.store: ""
    #            - =.builtIn.FCM.getAPPID:
    #                dataIn:
    #                  appName: =.AppName
    #                dataOut: FirebaseToken.edge.evid
    #            - actionType: evalObject
    #              object: .Global.updateJwt
    #            - =.Global.jwt.edgeAPI.store: ""
    - type: register
      onEvent: twilioOnPeopleJoin
      actions:
        - actionType: builtIn
          funcName: hide
          viewTag: waitForOtherTag
    - type: register
      onEvent: twilioOnNoParticipant
      actions:
        - actionType: builtIn
          funcName: show
          viewTag: waitForOtherTag
    - type: view
      style:
        left: "0"
        top: "0"
        width: "1"
        height: "1"
        zIndex: 10
        backgroundColor: "0xffffff"
      children:
        - type: image
          path: aitmedLogoBlack.svg # waitingroom.png
          style:
            left: "0.25"
            top: "0.2"
            width: "0.5"
            height: "0.8"
            position: "fixed"
            # objectFit: "none!important"
        - type: view
          viewTag: mainStream
          style:
            left: "0"
            top: "0"
            width: "1"
            height: "1"
            backgroundColor: "0x00000000"
        - type: view
          viewTag: selfStream
          style:
            left: "0.04"
            top: "0.1"
            width: "0.2"
            height: "0.15"
            backgroundColor: "0x00000000"
        - type: view
          style:
            left: "0"
            top: "0"
            width: "1"
            height: "0.07"
            backgroundColor: "0x000000"
            zIndex: 10
          children:
            - type: label
              dataKey: roomInfo.edge.name.roomName
              style:
                left: "0"
                top: "0.02"
                width: "1"
                fontSize: "20"
                fontStyle: bold
                color: "0xFFFFFF"
                textAlign:
                  x: center
            - type: image
              viewTag: switchCamera
              path: cameraSwitch.svg
              style:
                left: "0.87"
                top: "0.01"
                width: "0.12"
                height: "0.05"
                lineHeight: "55px"
                #height: "0.07"
                fontSize: .Nfont.h14
                color: "0xFFFFFF"
                textAlign:
                  x: right
              onClick:
                actionType: builtIn
                funcName: switchCamera
        # - type: label
        #   contentType: hidden # passwordHidden
        #   viewTag: waitForOtherTag
        #   text: "Waiting for others to join"
        #   #viewTag: needHidden
        #   style:
        #     left: "0"
        #     top: "0.4"
        #     width: "1"
        #     height: "0.04"
        #     fontSize: .Nfont.h16
        #     fontStyle: bold
        #     color: "0x000000"
        #     textAlign:
        #       x: center
        - type: list # hardcoded listObject
          viewTag: videoSubStream
          contentType: videoSubStream # listObject
          listObject: "" # provide by twilio API ..listData.participants # to dataObject to enumerate the list
          iteratorVar: itemObject
          #for (itemObject in listObject) do something
          #  ..messageDoc@ = itemObject
          style:
            axis: horizontal
            left: "0.04"
            top: "0.62"
            width: "0.92"
            height: "0.15"
            zIndex: 20
          #for loop through listObject, we got each itemObject
          children:
            - type: listItem
              itemObject: ""
              style:
                left: "0"
                width: "0.18"
                height: "0.15"
                border:
                  style: "1"
              children:
                - type: view
                  viewTag: subStream
                  # twilio API(js sdk) provides subStream html element.
                  style:
                    left: "0.015"
                    top: "0"
                    width: "0.15"
                    height: "0.15"
                    border:
                      style: "5"
                    borderRadius: "5"
        - type: view
          style:
            left: "0"
            top: "0.9"
            width: "1"
            height: "0.1"
            border:
              style: "5"
            backgroundColor: "0x000000"
            position: "fixed"
            zIndex: 10
          children:
            - type: image
              viewTag: camera
              path:
                emit:
                  actions:
                    - if:
                        - =.VideoChat.cameraOn
                        - cameraOn.svg
                        - cameraOff.svg
              onClick:
                - actionType: builtIn
                  funcName: toggleFlag
                  dataKey: VideoChat.cameraOn
                - emit:
                    actions:
                      - if:
                          - =.VideoChat.cameraOn
                          - .VideoChat.cameraOn@: false
                          - .VideoChat.cameraOn@: true
                - actionType: evalObject
                  object:
                    - .Global.cameraOn@: =..cameraOn
                - actionType: builtIn
                  funcName: redraw
                  viewTag: camera
              style:
                left: "0.1"
                top: "0.035"
                width: "0.08"
                height: "0.03"
            - type: image
              viewTag: microphone
              path:
                emit:
                  actions:
                    - if:
                        - =.VideoChat.micOn
                        - micOn.svg
                        - micOff.svg
              onClick:
                # - actionType: builtIn
                #  funcName: toggleMicrophoneOnOff
                - actionType: builtIn
                  funcName: toggleFlag
                  dataKey: VideoChat.micOn
                - emit:
                    actions:
                      - if:
                          - =.VideoChat.micOn
                          - .VideoChat.micOn@: false
                          - .VideoChat.micOn@: true
                - actionType: evalObject
                  object:
                    - .Global.micOn@: =..micOn
                - actionType: builtIn
                  funcName: redraw
                  viewTag: microphone
              style:
                left: "0.28"
                top: "0.03"
                width: "0.06"
                height: "0.04"
            - type: image
              path: hangUp.svg
              onClick:
                - actionType: evalObject
                  object:
                    - if: 
                      - =.Global.status.isParticipant
                      - actionType: updateObject # updateObject(dataKey, dataObject, dataObjectKey)
                        dataKey: Global.roomInfoDoc.document
                        dataObject: {}
                      - continue
                    - if: 
                      - =.Global.status.isParticipant
                      - actionType: builtIn
                        funcName: goBack
                        reload: true
                      - actionType: popUp
                        popUpView: confirmView
              style:
                left: "0.43"
                top: "0.0185"
                width: "0.12"
                backgroundColor: "0xd81e06"
                border:
                  style: "3"
                  width: "1"
                borderRadius: "100"
            - type: view
              style:
                width: "0.2"
                height: "0.1"
                left: "0.6"
                top: "0"
              onClick:
                - actionType: popUp
                  popUpView: selectView
                  dismissOnTouchOutside: true
              children:
                - type: image
                  path: navIcMore.svg
                  style:
                    left: "0.042"
                    top: "0.041"
                    width: "0.06"
                    height: "0.02"
            - type: label
              #text: "1:10"
              contentType: timer
              viewTag: videoTimer
              text=func: =.builtIn.string.formatTimer
              dataKey: Global.timer # to be remove after implemented builtIn
              style:
                left: "0.8"
                top: "0"
                height: "0.1"
                width: "0.2"
                fontSize: .Nfont.h16
                color: "0xffffff"
                fontWeight: "500"
                textAlign:
                  y: center

    - type: popUp
      viewTag: minimizeVideoChat
      global: true
      style:
        left: "0.1"
        top: "0"
        width: "0.2"
        height: "0.15"
        zIndex: 10
      image: chat.png
      audioStream: true
      videoStream: true
      onClick:
        - actionType: popUpDismiss
          popUpView: minimizeVideoChat #wangchen 11/20 2021 Show minizevideochat before goto
        - actionType: evalObject
          object:
            - goto:
                dataIn:
                  destination: VideoChat
                  reload: false

    # close meeting confirm pop up
    - type: popUp
      viewTag: confirmView
      style:
        left: "0"
        top: "0"
        width: "1"
        height: "1"
        zIndex: 10
      children:
        - type: view
          style:
            left: "0.1"
            top: "0.325"
            width: "0.8"
            height: "0.35"
            backgroundColor: "0xeeeeeeff"
            border:
              style: "5"
            borderRadius: "15"
          children:
            - type: image
              onClick:
                - actionType: popUpDismiss
                  popUpView: confirmView
              path: cancel.svg
              style:
                .LabelStyle:
                  left: "0.025"
                  top: "0.01"
                  width: "0.03"
                  height: "0.03"
                  color: "0x388eccff"
                  fontSize: "15"
                  display: inline
                  textAlign:
                    x: center
                    y: center
                  border:
                    style: "5"
                  borderRadius: "15"
            - type: label
              text: "LEAVING MEETING..."
              style:
                .LabelStyle:
                  left: "0.05"
                  top: "0.02"
                  width: "0.7"
                  height: "0.04"
                  color: "0x00000088"
                  fontSize: "20"
                  fontWeight: "500"
                  display: inline
                  textAlign:
                    x: center
                    y: center
            - type: label
              text: "Close this meeting room?"
              style:
                .LabelStyle:
                  left: "0.05"
                  top: "0.06"
                  width: "0.7"
                  height: "0.04"
                  color: "0x00000088"
                  fontSize: "20"
                  fontWeight: "500"
                  display: inline
                  textAlign:
                    x: center
                    y: center
            - type: label
              text: "Closing the room will generate a Summary for each participant."
              style:
                left: "0.05"
                top: "0.11"
                width: "0.7"
                height: "0.05"
                color: "0x00000088"
                fontSize: .Nfont.h16
                textAlign:
                  x: center
                  y: center
            - type: label
              text: "If you desire to return to this meeting, keep this room open"
              style:
                left: "0.05"
                top: "0.18"
                width: "0.7"
                height: "0.05"
                color: "0x00000088"
                fontSize: .Nfont.h16
                textAlign:
                  x: center
                  y: center
            - type: divider
              style:
                .DividerStyle:
                  left: "0"
                  top: "0.25436"
                  width: "0.8"
                  height: "0.001"
                  backgroundColor: "0x00000088"
            - type: button
              onClick:
                - actionType: popUpDismiss
                  popUpView: confirmView
                # clear roomDoc
                - actionType: updateObject # updateObject(dataKey, dataObject, dataObjectKey)
                  dataKey: Global.roomInfoDoc.document
                  dataObject: {}
                - actionType: evalObject
                  object:
                    - .Global.timer@: 0
                    - .Global.micOn@: "true"
                    - .Global.cameraOn@: "true"
                # TODO add time
                - actionType: builtIn
                  funcName: disconnectMeeting #wangchen 11/20 2021 Keep Open Should not disconnect Meeting
                - actionType: evalObject
                  object:
                    .Global._nonce@:
                      =.builtIn.math.random: ""
                - actionType: popUpDismiss
                  popUpView: minimizeVideoChat
                # - actionType: popUp
                #   popUpView: minimizeVideoChat #wangchen 11/20 2021 Show minizevideochat before goto
                - goto: AppointmentLobby
              text: Keep Open
              style:
                .LabelStyle:
                  left: "0"
                  top: "0.275"
                  width: "0.4"
                  height: "0.06812"
                  color: "0x2988e6ff"
                  fontSize: "17"
                  display: inline
                  textAlign:
                    x: center
                    y: center
                  border:
                    style: "5"
                  borderRadius: "15"

            - type: button
              onClick:
                # leave the meeting
                - actionType: builtIn
                  funcName: disconnectMeeting
                # clear roomDoc
                - actionType: updateObject # updateObject(dataKey, dataObject, dataObjectKey)
                  dataKey: Global.roomInfoDoc.document
                  dataObject: {}
                - actionType: evalObject
                  object:
                    - .Global.timer@: 0
                    - .Global.micOn@: "true"
                    - .Global.cameraOn@: "true"
                  # change roomInfo tage
                - actionType: evalObject
                  object:
                    - =.builtIn.number.inhx:
                        dataIn:
                          intHex: =..apiRequest.appointmentTag.docCreateReq.tage
                          index: 9
                          hex: 1
                        dataOut: VideoChat.apiRequest.appointmentTag.docCreateReq.tage
                    - =..apiRequest.appointmentTag.docAPI.store: ""
                    - =..apiRequest.appointment.edgeAPI.get: ""
                    - .Global.roomInfo.edge@: =..apiRequest.appointment.edgeQueryResp.edge.0
                - actionType: evalObject
                  object:
                    .Global._nonce@:
                      =.builtIn.math.random: ""
                - goto: VisitDetial
              text: Close Meeting
              style:
                .LabelStyle:
                  left: "0.4"
                  top: "0.275"
                  width: "0.4"
                  height: "0.06812"
                  color: "0x2988e6ff"
                  fontSize: "17"
                  display: inline
                  textAlign:
                    x: center
                    y: center
                  border:
                    style: "5"
                  borderRadius: "15"
            - type: divider
              style:
                .DividerStyle:
                  left: "0.4"
                  top: "0.26"
                  width: "0.001"
                  height: "0.07"
                  backgroundColor: "0x00000088"
    - type: popUp
      viewTag: selectView
      style:
        left: "0"
        width: "1"
        height: "1"
        top: "0"
        zIndex: 10
      children:
        - type: view
          style:
            width: "1"
            height: "1"
            top: "0"
            left: "0"
          onClick:
            - actionType: popUpDismiss
              popUpView: selectView
          children:
            - type: list
              contentType: listObject
              listObject: ..popUpList
              iteratorVar: itemObject
              style:
                border:
                  style: "3"
                borderColor: "0x00000088"
                borderWidth: "1"
                borderRadius: "10"
                backgroundColor: "0xf4f4f4"
                width: "0.45"
                height: "0.1"
                top: "0.8"
                left: "0.5"
                overflow: hidden
              children:
                - type: listItem
                  itemObject: ""
                  style:
                    width: "0.45"
                    height: "0.05"
                    border:
                      style: "2"
                    borderColor: "0x00000066"
                    backgroundColor: "0xf4f4f4"
                    borderWidth: "1"
                  children:
                    - type: label
                      dataKey: itemObject.text
                      style:
                        width: "0.45"
                        height: "0.03"
                        top: "0.011"
                        fontWeight: "500"
                        textAlign:
                          x: center
                        fontSize: .Nfont.h14
                      onClick:
                        - actionType: evalObject
                          object:
                            .Global.rootRoomInfo.edge.name.duration@: =.Global.timer
                        - actionType: updateObject # updateObject(dataKey, dataObject, dataObjectKey)
                          dataKey: VideoChat.popUpListTemp
                          dataObject: itemObject
                        - actionType: popUp
                          popUpView: minimizeVideoChat
                        - actionType: evalObject
                          object:
                            - if:
                                - =.builtIn.string.equal:
                                    dataIn:
                                      string1: =.VideoChat.popUpListTemp.pageName
                                      string2: "ScreenShare"
                                - actionType: popUp
                                  popUpView: underconstruction
                                - goto: .VideoChat.popUpListTemp.pageName
                        - actionType: popUpDismiss
                          popUpView: selectView
