CreateAvailability: #xdpage:10 11 12
  title: "Create Availability"
  viewPort: top
  init:
    - .SignInCheck
    - actionType: evalObject
      object:
        .Global._nonce@:
          =.builtIn.math.random: ""
    # get month for calendar
    - actionType: evalObject #android use calendar init
      object:
        - .BaseComponents.calendarDate.year@: ""
        - .BaseComponents.calendarDate.month@: ""
        - .BaseComponents.calendarDate.day@: ""
        - .BaseComponents.calendarDate.monthName@: ""
        - .BaseComponents.calendarDate.todayDate@: ""
        - .BaseComponents.calendarDate.flag@: ""
        - .BaseComponents.calendarDate.dayLable@: []
        - .BaseComponents.year@: []
        - .BaseComponents.flag: ""
        #生成年份
        - =.builtIn.date.generateYear:
            dataIn:
              last: 121
              next: 10
            dataOut: BaseComponents.year
    - actionType: evalObject #android use calendar init
      object: .BaseComponents.getDate
    - actionType: evalObject #android use calendar init
      object: .BaseComponents.getShow

    - actionType: evalObject
      object:
        - =.builtIn.date.getTimezoneOffset:
            dataIn: ""
            dataOut: CreateAvailability.newBackup.name.setting.timezoneOffsetInMinute
        - =.builtIn.date.getTimezoneOffset:
            dataIn: ""
            dataOut: Global.currentSchdule.name.setting.timezoneOffsetInMinute
    - actionType: evalObject
      object:
        - =.builtIn.date.LoopToGenerate:
            dataIn:
              span: 30
            dataOut: CreateAvailability.scheduleSettingsTemp.timeSpan
    - actionType: evalObject
      object:
        - if:
            - =.Global.currentSchdule.id
            - ..newAppointment.edge@: =.Global.currentSchdule
            - ..newAppointment.edge@: =..newBackup
        - if:
            - =.Global.currentSchdule.id
            - =.builtIn.array.transformNull:
                dataIn:
                  dayObject: =..newAppointment.edge.name.setting.day
            - continue
        - ..newAppointment.edge.id@: ""
        - if:
            - =.builtIn.string.equal:
                dataIn:
                  string1: =.Global.currentUser.vertex.id
                  string2: =.Global.currentFacility.id
            - continue
            - .CreateAvailability.newAppointment.edge.bvid@: =.Global.locationId
        - if:
            - =.Global.currentSchdule.id
            - =.builtIn.date.transformSelectWeek:
                dataIn:
                  object: =.Global.currentSchdule.name.setting.day
                dataOut: CreateAvailability.formData.res
            - continue
        - if:
            - =.CreateAvailability.formData.res.addWeek.0
            - ..addWeek@: =.CreateAvailability.formData.res.addWeek
            - continue
        - if:
            - =.CreateAvailability.formData.res.selectWeek.0
            - ..scheduleSettingsTemp.weekDaySelect@: =.CreateAvailability.formData.res.selectWeek
            - continue
        - if:
            - =.CreateAvailability.addWeek.0
            - =.builtIn.date.TransformWeekDate:
                dataIn:
                  object: =..addWeek
                dataOut: CreateAvailability.WeekData
            - continue
    - ..VisitReason.docAPI.get
    - ..profile.docAPI.get
    - actionType: evalObject
      object:
        ..VisitReason.document@: =..VisitReason.response.doc.0
    - actionType: evalObject
      object:
        - if:
            - =.builtIn.string.equal:
                dataIn:
                  string1: =.Global.currentUser.vertex.id
                  string2: =.Global.currentFacility.id
            - .CreateAvailability.newAppointment.edge.name.setting.Address@: =..profile.docResponse.doc.0.name.data.address
            - .CreateAvailability.newAppointment.edge.name.setting.Address@: =.Global.address
    - actionType: evalObject
      object:
        - =.builtIn.array.convertToList:
            dataIn:
              array: =..VisitReason.document.name.data.reasonForVisit
              key: reason
            dataOut: CreateAvailability.formData.reasonForVisit
        - =.builtIn.array.getFirstItem:
            dataIn:
              array: =..VisitReason.document.name.data.reasonForVisit
            dataOut: MobileContacts.selectData
    - actionType: evalObject
      object:
        - if:
            - =.builtIn.string.equal:
                dataIn:
                  string1: =.Global.setSchedule.scheduleType
                  string2: "Telemedicine"
            - continue
            - =.builtIn.checkField:
                dataIn:
                  contentType: messageHidden
                  wait: 100
    - actionType: builtIn
      funcName: redraw
      viewTag: addressTag
    - actionType: evalObject
      object:
        - =.builtIn.date.getMonth:
            dataIn:
            dataOut: CreateAvailability.calendarDate.month
        # get Year for calendar
        - =.builtIn.date.getYear:
            dataIn:
            dataOut: CreateAvailability.calendarDate.year
        - =.builtIn.date.getDate:
            dataIn:
            dataOut: CreateAvailability.calendarDate.day
    - actionType: evalObject
      object:
        - =.builtIn.date.calendarArray:
            dataIn:
              year: =.CreateAvailability.calendarDate.year
              month: =.CreateAvailability.calendarDate.month
              today: =.CreateAvailability.calendarDate.day
            dataOut: CreateAvailability.calendarDate.dayLable
        - =.builtIn.date.transformMonth:
            dataIn:
              month: =.CreateAvailability.calendarDate.month
            dataOut: CreateAvailability.calendarDate.monthName
        - =.builtIn.date.ShowDateByNumber:
            dataIn:
              year: =.CreateAvailability.calendarDate.year
              month: =.CreateAvailability.calendarDate.month
              day: =.CreateAvailability.calendarDate.day
              formatType: "M/D/Y"
            dataOut: CreateAvailability.calendarDate.todayDate
    - actionType: evalObject
      object:
        - .BaseComponents.calendarDate@: =.CreateAvailability.calendarDate
        - ..newBackup.name.setting.startDate@: =..calendarDate.todayDate
        - actionType: builtIn
          funcName: redraw
          viewTag: calendarTag
  setAvailable:
    - =.CreateAvailability.newAppointment.edgeAPI.store: ""
  calendarDate:
    month: ""
    year: ""
    day: ""
    todayDate: ""
    dayLable: []
    monthName: ""
  WeekData:
    legend:
      bottom: 1%
      selectedMode: "false"
      textStyle:
        color: "#000"
    grid:
      left: 3%
      right: 3%
      top: 1%
      bottom: 10%
      containLabel: "true"
    yAxis:
      type: category
      data:
        - SA
        - FR
        - TH
        - WE
        - TU
        - MO
        - SU
    xAxis:
      type: value
    series:
      - data: ""
        type: line
  BackUpData:
    legend:
      bottom: 1%
      selectedMode: "false"
      textStyle:
        color: "#000"
    grid:
      left: 3%
      right: 3%
      top: 1%
      bottom: 10%
      containLabel: "true"
    yAxis:
      type: category
      data:
        - SA
        - FR
        - TH
        - WE
        - TU
        - MO
        - SU
    xAxis:
      type: value
    series:
      - data: []
        type: line
  options:
    - select option
    - Office Visits
    - Telemedicine
  minutes:
    - Minutes
    - 5
    - 10
    - 15
    - 20
    - 30
    - 45
    - 60
    - 75
    - 90
    - 120
  #review
  #医生每个时间段是一条appointment的edge,病人根据时间段选择相应appointment
  blockDaySelectedObj: ""
  profile:
    docResponse: ""
    document:
      type: .DocType.DoctorProfile
      eid: .Global.rootNotebookID
      name:
        data:
          firstName: ""
          middleName: ""
          lastName: ""
          title: ""
          userName: ""
          phone: ""
          email: ""
          fax: ""
          Address: ""
          specialty: []
          NPI: ""
          medicalLicenseState: ""
          medicalLicense: ""
          licenseExpiration: ""
          DEA: ""
          boardCertified: ""
          avatar: ""
    docAPI:
      get:
        .DocAPI.get: ""
        api: rd
        id: .Global.rootNotebookID
        xfname: eid
        type: .DocType.DoctorProfile
        dataKey: profile.docResponse
        _nonce: =.Global._nonce
  formDataTemp:
    dataTest: ""
    currenTimestamp: ""
    obtainedTime: ""
  res: ""
  formData:
    res: ""
    reasonForVisit: []
    selectData:
      reason: ""
      duration: ""
      durationList: []
    currentGovermentHoliday: ""
    addressList: []
  availableTime:
    timeStart: ""
    timeEnd: ""
    timeStart1: ""
    timeEnd1: ""
    timeResult: ""
  timeFlag: ""
  scheduleSettingsTemp:
    weekdayTemp:
      - key: Su
        index: 0
        availableTime:
          timeStart: "06:00AM"
          timeResult: ""
          timeEnd: "06:00AM"
      - key: M
        index: 1
        availableTime:
          timeStart: "06:00AM"
          timeResult: ""
          timeEnd: "06:00AM"
      - key: T
        index: 2
        availableTime:
          timeStart: "06:00AM"
          timeEnd: "06:00AM"
          timeResult: ""
      - key: W
        index: 3
        availableTime:
          timeStart: "06:00AM"
          timeResult: ""
          timeEnd: "06:00AM"
      - key: Th
        index: 4
        availableTime:
          timeStart: "06:00AM"
          timeResult: ""
          timeEnd: "06:00AM"
      - key: F
        index: 5
        availableTime:
          timeStart: "06:00AM"
          timeResult: ""
          timeEnd: "06:00AM"
      - key: Sa
        index: 6
        availableTime:
          timeStart: "06:00AM"
          timeEnd: "06:00AM"
          timeResult: ""
    weekDaySelect:
      - key: M
        index: 1
        availableTime:
          timeStart: "06:00AM"
          timeEnd: "06:00AM"
          timeResult: ""
      - key: T
        index: 2
        availableTime:
          timeStart: "06:00AM"
          timeEnd: "06:00AM"
          timeResult: ""
      - key: W
        index: 3
        availableTime:
          timeStart: "06:00AM"
          timeEnd: "06:00AM"
          timeResult: ""
    timeSpan: []

  # 1) set availability only set for future time slot.
  # 2) availability overwrite "blocked" time slot.
  # 3) "remove" or "block" availability remove existing available timie slot
  # 4) For "required" time slot, "remove" will reject the "request"
  # 5) For "confirmed" or "scheduled" time slots, "cancellation notification will be sent
  addWeek: []
  blockDay: []
  newBackup:
    .Edge: ""
    id: ""
    subtype: .Global.setSchedule.scheduleTypeNumber #   0x10003 3<<16 + 1  3*65536 +1  0x30000|1 196609   online ,  +2 in office  0x20000|1    2<<16 + 1  131073,  0x10000|1 1<<16+1 65537
    type: 40000
    bvid: .Global.currentFacility.id
    evid: .Global.currentUser.vertex.id
    name:
      title: ""
      visitType: .Global.setSchedule.scheduleType
      setting:
        day:
          -
          -
          -
          -
          -
          -
          -
        forwardRepeatWeeks: "10"
        blockDays: []
        governmentHolidays: ""
        businessHolidays: ""
        bookingtimeSpan: "60"
        timeSlotBackColor: "#ffffff"
        timeSlotColor: "#000000"
        timezoneOffsetInMinute: ""
        startDate: ""
        Address: ""
        endDate: " "
  newAppointment:
    edge:
      name:
        title: ""
        setting:
          # MM/DD/YYYY
          startDate_show: ""
          # YYYY-MM-DD
          startDate: ""
          blockDays: []
          governmentHolidays: ""
          businessHolidays: ""
          endDate: ""
          Address: ""
    edgeAPI:
      .EdgeAPI: ""
      store:
        api: ce
        dataIn: newAppointment.edge
        dataOut: newAppointment.edge
  VisitReason:
    response: ""
    document:
      type: .DocType.VisitReason
      name:
        data:
          reasonForVisit: []
      eid: .Global.rootNotebookID
    docAPI:
      store:
        api: cd
        dataKey: VisitReason.document
      get:
        .DocAPI.get: ""
        api: rd
        type: .DocType.VisitReason
        id: .Global.currentUser.vertex.id
        xfname: ovid
        dataKey: CreateAvailability.VisitReason.response
        _nonce: =.Global._nonce
  addressHeight: ""
  startDatecalender: "" # click add button to select start date
  endDatecalender: "" # click add button to select end date
  blockDatecalender: "" # click add button to select block date
  components:
    - .BaseHeader:
    - .HeaderLeftButton:
      onClick:
        - actionType: evalObject
          object:
            - .Global.createjwt.edge.bvid@: =.Global.currentUser.vertex.id
            - =.Global.createjwt.edgeAPI.store: ""
        - actionType: builtIn
          funcName: goBack
          reload: true
    - type: scrollView
      style:
        left: "0"
        top: "0.1"
        width: "1"
        height: "0.9"
        overflow: scroll
      children:
        - type: view
          style:
            width: "1"
            height: "0.04"
            top: "0"
            left: "0"
            backgroundColor: "#f0f0f0"
          children:
            - type: label
              dataKey: Global.setSchedule.scheduleType
              style:
                width: "0.7"
                left: "0.05"
                height: "0.04"
                top: "0"
                textAlign:
                  y: center
        - type: view
          style:
            top: "0.05"
            width: "1"
            height: "0.17"
          children:
            - type: label
              text: "What’s your weekly availability? "
              style:
                top: "0"
                height: "0.04"
                fontSize: .Nfont.h14
                fontFamily: "Arial"
                width: "0.68"
                left: "0.05"
                textAlign:
                  y: center
            - type: label
              text: Available Days
              style:
                top: "0.04"
                height: "0.04"
                fontSize: .Nfont.h14
                fontFamily: "Arial"
                width: "0.68"
                left: "0.05"
                textAlign:
                  y: center
            - type: view
              style:
                left: "0"
                width: "1"
                top: "0.095"
                height: "0.07"
              children:
                - type: list
                  contentType: listObject
                  listObject: ..scheduleSettingsTemp.weekdayTemp
                  iteratorVar: itemObject
                  viewTag: weekday
                  style:
                    top: "0"
                    left: "0.05"
                    width: "0.9"
                    height: "0.07"
                    margin: "0"
                    axis: horizontal
                  children:
                    - type: listItem
                      itemObject: ""
                      style:
                        left: "0"
                        width: "0.12"
                        height: "0.06"
                        borderWidth: "1"
                        border:
                          style: "3"
                        borderColor: "0x00000033"
                      children:
                        - .ScheduleSettingsChoose:
                          path:
                            emit:
                              dataKey:
                                var: itemObject
                              actions:
                                - if:
                                    - =.builtIn.array.hasKey:
                                        dataIn:
                                          object: =..scheduleSettingsTemp.weekDaySelect
                                          key: $var.key
                                    - selectOn.svg
                                    - selectOff.svg
                          onClick:
                            - emit:
                                dataKey:
                                  var: itemObject
                                actions:
                                  - if:
                                      - =.builtIn.array.hasKey:
                                          dataIn:
                                            object: =..scheduleSettingsTemp.weekDaySelect
                                            key: $var.key
                                      - =.builtIn.array.removeByKey:
                                          dataIn:
                                            object: =..scheduleSettingsTemp.weekDaySelect
                                            key: $var.key
                                      # copy
                                      - =.builtIn.array.copyByKey:
                                          dataIn:
                                            array1: =..scheduleSettingsTemp.weekdayTemp
                                            array2: =..scheduleSettingsTemp.weekDaySelect
                                            key: $var.key
                                  - =.builtIn.array.SortBy:
                                      dataIn:
                                        object: =..scheduleSettingsTemp.weekDaySelect
                                        iterate: "index"
                                        orders: "asc"
                                      dataOut: CreateAvailability.scheduleSettingsTemp.weekDaySelect
                            - actionType: builtIn
                              funcName: redraw
                              viewTag: weekday
                            - actionType: builtIn
                              funcName: redraw
                              viewTag: timeSlot
                            - actionType: builtIn
                              funcName: redraw
                              viewTag: availableTimeTag
                        - type: label
                          dataKey: itemObject.key
                          style:
                            left: "0"
                            top: "0.032"
                            height: "0.025"
                            width: "0.12"
                            textAlign:
                              x: center
                            fontSize: .Nfont.h14
                            color: "0x000000cd"
        - type: view
          style:
            top: "0.22"
            width: "1"
            left: "0"
          children:
            - type: view
              style:
                marginTop: "0.02"
                width: "0.95"
                left: "0.05"
                height: "auto"
              children:
                - type: view
                  style:
                    width: "0.9"
                    left: "0"
                    height: "auto"
                  children:
                    - type: list
                      viewTag: weekday
                      contentType: listObject
                      listObject: ..scheduleSettingsTemp.weekDaySelect
                      iteratorVar: itemObject
                      style:
                        height: "auto"
                        width: "0.9"
                        left: "0"
                        margin: "0"
                      children:
                        - type: listItem
                          itemObject: ""
                          style:
                            width: "0.9"
                            height: "0.04"
                            left: "0"
                          children:
                            - type: label
                              dataKey: itemObject.key
                              style:
                                left: "0"
                                top: "0.002"
                                height: "0.03"
                                width: "0.06"
                                fontSize: .Nfont.h16
                            - type: select
                              dataKey: itemObject.availableTime.timeStart
                              viewTag: availableTimeTag
                              options: ..scheduleSettingsTemp.timeSpan
                              onChange:
                                - emit:
                                    dataKey:
                                      var: itemObject
                                    actions:
                                      - ..availableTime.timeStart1@: $var.availableTime.timeStart
                              style:
                                left: "0.08"
                                width: "0.25"
                                top: "0.005"
                                height: "0.025"
                                fontSize: .Nfont.h14
                                borderWidth: "1"
                                border:
                                  style: "3"
                                borderColor: "0x00000033"
                                borderRadius: "5"
                            - type: select
                              viewTag: availableTimeTag
                              options: ..scheduleSettingsTemp.timeSpan
                              dataKey: itemObject.availableTime.timeEnd
                              onChange:
                                - emit:
                                    dataKey:
                                      var: itemObject
                                    actions:
                                      - ..availableTime.timeEnd1@: $var.availableTime.timeEnd
                              style:
                                left: "0.37"
                                width: "0.25"
                                top: "0.005"
                                fontSize: .Nfont.h14
                                height: "0.025"
                                borderWidth: "1"
                                border:
                                  style: "3"
                                borderColor: "0x00000033"
                                borderRadius: "5"
                            - type: button
                              text: Add
                              style:
                                left: "0.67"
                                top: "0.007"
                                height: "0.025"
                                width: "0.15"
                                fontSize: .Nfont.h14
                                textDecoration: underline
                                textAlign:
                                  x: center
                                color: "0x2988e6"
                                border:
                                  style: "1"
                                backgroundColor: "0xffffff"
                              onClick:
                                - actionType: evalObject
                                  object:
                                    - .CreateAvailability.WeekData@: ""
                                - emit:
                                    dataKey:
                                      var: itemObject
                                    actions:
                                      - =.builtIn.date.DateCompare:
                                          dataIn:
                                            startTime: $var.availableTime.timeStart
                                            endTime: $var.availableTime.timeEnd
                                          dataOut: CreateAvailability.timeFlag
                                      - =.builtIn.date.compareDate:
                                          dataIn:
                                            comTime: $var
                                            pareTime: =.CreateAvailability.addWeek
                                          dataOut: CreateAvailability.formDataTemp.dataTest
                                - actionType: evalObject
                                  object:
                                    - if:
                                        - =.CreateAvailability.timeFlag
                                        - continue
                                        - actionType: popUp
                                          popUpView: timeErrorView
                                          wait: true
                                    - if:
                                        - =.CreateAvailability.formDataTemp.dataTest
                                        - continue
                                        - actionType: popUp
                                          popUpView: timeOverlapsError
                                          wait: true
                                    - if:
                                        - =.builtIn.string.equal:
                                            dataIn:
                                              string1: "12:00AM"
                                              string2: $var.availableTime.timeStart
                                        - ..timeFlag@: "1"
                                        - continue
                                    - if:
                                        - =.builtIn.string.equal:
                                            dataIn:
                                              string1: "12:00AM"
                                              string2: $var.availableTime.timeEnd
                                        - ..timeFlag@: "1"
                                        - continue
                                    - if:
                                        - =.builtIn.string.judgeFillinAll:
                                            dataIn:
                                              - $var.availableTime.timeStart
                                              - $var.availableTime.timeEnd
                                        - ..timeFlag@: "1"
                                        - ..timeFlag@: "0"
                                - actionType: evalObject
                                  object:
                                    - if:
                                        - =.builtIn.string.equal:
                                            dataIn:
                                              string1: =..timeFlag
                                              string2: "1"
                                        - actionType: popUp
                                          popUpView: timeErrorView
                                        - continue
                                - emit:
                                    dataKey:
                                      var: itemObject
                                    actions:
                                      - if:
                                          - =.builtIn.string.equal:
                                              dataIn:
                                                string1: =..timeFlag
                                                string2: "1"
                                          - continue
                                          - =.builtIn.string.concat:
                                              dataIn:
                                                - $var.availableTime.timeStart
                                                - "-"
                                                - $var.availableTime.timeEnd
                                              dataOut: CreateAvailability.availableTime.timeResult
                                      - if:
                                          - =.builtIn.string.equal:
                                              dataIn:
                                                string1: =..timeFlag
                                                string2: "1"
                                          - continue
                                          - =.builtIn.array.addByIndex:
                                              dataIn:
                                                object: =..newAppointment.edge.name.setting.day
                                                value: =..availableTime.timeResult
                                                index: $var.index
                                      - if:
                                          - =.builtIn.string.equal:
                                              dataIn:
                                                string1: =..timeFlag
                                                string2: "1"
                                          - continue
                                          - =.builtIn.array.AddWeek:
                                              dataIn:
                                                object: =..addWeek
                                                duration: =.CreateAvailability.availableTime.timeResult
                                                location: ""
                                                index: $var.index
                                                key: $var.key
                                      - =.builtIn.object.set:
                                          dataIn:
                                            object: $var.availableTime
                                            key: timeStart
                                            value: "00:00AM"
                                      - =.builtIn.object.set:
                                          dataIn:
                                            object: $var.availableTime
                                            key: timeEnd
                                            value: "00:00AM"
                                      - .CreateAvailability.availableTime.timeResult@: ""
                                - actionType: evalObject
                                  object:
                                    - if:
                                        - =.builtIn.string.equal:
                                            dataIn:
                                              string1: =..timeFlag
                                              string2: "1"
                                        - continue
                                        - actionType: evalObject
                                          object:
                                            - =.builtIn.date.TransformWeekDate:
                                                dataIn:
                                                  object: =..addWeek
                                                dataOut: CreateAvailability.WeekData
                                            - =.builtIn.array.SortBy:
                                                dataIn:
                                                  object: =..addWeek
                                                  iterate: "index"
                                                  orders: "asc"
                                                dataOut: CreateAvailability.addWeek
                                            - ..availableTime.timeStart1@: ""
                                            - ..availableTime.timeEnd1@: ""
                                - actionType: builtIn
                                  funcName: redraw
                                  viewTag: timeSlot
                                - actionType: builtIn
                                  funcName: redraw
                                  viewTag: weekday
                    - type: list
                      contentType: listObject
                      listObject: ..addWeek
                      iteratorVar: itemObject
                      viewTag: timeSlot
                      style:
                        width: "0.9"
                        height: "auto"
                        left: "0.05"
                      children:
                        - type: listItem
                          itemObject: ""
                          style:
                            height: "0.03"
                            width: "0.9"
                            left: "0"
                          children:
                            - type: label
                              dataKey: itemObject.key
                              style:
                                width: "0.1"
                                left: "0"
                                fontSize: .Nfont.h16
                                top: "0"
                                height: "0.03"
                            - type: label
                              dataKey: itemObject.duration
                              style:
                                width: "0.5"
                                left: "0.13"
                                fontSize: .Nfont.h16
                                top: "0"
                                height: "0.03"
                            - type: image
                              onClick:
                                - emit:
                                    dataKey:
                                      var: itemObject
                                    actions:
                                      - =.builtIn.array.removeWeekByIndexs:
                                          dataIn:
                                            object1: =..addWeek
                                            object2: =..newAppointment.edge.name.setting.day
                                            index: $var.index
                                            duration: $var.duration
                                      - .CreateAvailability.WeekData@: =..BackUpData
                                - actionType: builtIn
                                  funcName: redraw
                                  viewTag: timeSlot
                              path: delete.svg
                              style:
                                marginTop: "0.002"
                                left: "0.75"
                                top: "0"
                                height: "0.024"
            - type: view
              style:
                left: "0.05"
                height: "auto"
                width: "0.95"
              viewTag: BlockedTag
              children:
                - type: label
                  text: "Time period for availability"
                  style:
                    fontSize: "17"
                    fontFamily: "Arial"
                    width: "0.8"
                    top: "0.01"
                    boxSizing: "border-box"
                    fontWeight: "600"
            - type: view
              viewTag: dateView
              style:
                marginTop: "0.08"
                width: "0.95"
                left: "0.05"
                height: "0.09"
              children:
                - type: label
                  text: Start date
                  style:
                    width: "0.2"
                    top: "0"
                    left: "0"
                    height: "0.04"
                    textAlign:
                      x: left
                - type: textField
                  placeholder: MM/DD/YYYY
                  dataKey: newAppointment.edge.name.setting.startDate_show
                  onClick:
                    - actionType: builtIn
                      funcName: redraw
                      viewTag: calendarTag
                    - actionType: popUp
                      popUpView: startDateView
                  style:
                    top: "0.05"
                    fontSize: .Nfont.h16
                    fontFamily: "Arial"
                    width: "0.52"
                    height: "0.03"
                    border:
                      style: "3"
                    borderRadius: "3"
                    borderWidth: "1"
                    textIndent: "10px"
                    borderColor: "0x00000033"
                # - type: label
                #   text: End
                #   style:
                #     top: "0.11"
                #     width: "0.4"
                #     height: "0.04"
                #     # isHidden: "true"     #暂时隐藏
                #     # display: none #暂时隐藏
                #     left: "0"
                #     textAlign:
                #       x: left
                # - type: textField
                #   placeholder: YYYY-MM-DD
                #   dataKey: newAppointment.edge.name.setting.endDate
                #   onClick:
                #     - actionType: popUp
                #       popUpView: endDateView
                #   style:
                #     top: "0.15"
                #     fontSize: .Nfont.h16
                #     # isHidden: "true"     #暂时隐藏
                #     # display: none #暂时隐藏
                #     fontFamily: "Arial"
                #     width: "0.52"
                #     height: "0.03"
                #     border:
                #       style: "3"
                #     borderRadius: "3"
                #     borderWidth: "1"
                #     textIndent: "10px"
                #     borderColor: "0x00000033"
                - type: label
                  text: Repeat
                  style:
                    top: "0"
                    width: "0.2"
                    height: "0.04"
                    left: "0.58"
                    textAlign:
                      x: left
                - type: textField
                  dataKey: newAppointment.edge.name.setting.forwardRepeatWeeks
                  style:
                    top: "0.05"
                    fontSize: .Nfont.h16
                    fontFamily: "Arial"
                    width: "0.16"
                    left: "0.58"
                    height: "0.03"
                    border:
                      style: "3"
                    borderRadius: "3"
                    borderWidth: "1"
                    textIndent: "10px"
                    borderColor: "0x00000033"
                - type: label
                  text: weeks
                  style:
                    top: "0.05"
                    fontSize: .Nfont.h16
                    fontFamily: "Arial"
                    width: "0.18"
                    height: "0.04"
                    textAlign:
                      y: center
                    left: "0.77"
            # - type: view
            #   viewTag: addressTag
            #   contentType: messageHidden
            #   style:
            #     display: none
            #     marginTop: "0.02"
            #     width: "0.95"
            #     height: "0.1"
            #     isHidden: true
            #     left: "0.05"
            #   children:
            #     - type: label
            #       text: Address
            #       style:
            #         left: "0"
            #         fontSize: .Nfont.h16
            #         top: "0"
            #         height: "0.03"
            #     - type: textField
            #       isEditable: false
            #       placeholder: You may not have set the address in your profile
            #       dataKey: newAppointment.edge.name.setting.Address
            #       style:
            #         fontSize: .Nfont.h16
            #         fontFamily: "Arial"
            #         width: "0.9"
            #         height: "0.03"
            #         top: "0.035"
            #         border:
            #           style: "3"
            #         borderRadius: "3"
            #         borderWidth: "1"
            #         textIndent: "10px"
            #         borderColor: "0x00000033"
            - type: view
              style:
                width: "0.95"
                marginTop: "0.04"
                left: "0.05"
                height: "0.15"
                backgroundColor: "0xffffff"
              children:
                - type: button
                  text: Set Availability
                  style:
                    top: "0.02"
                    width: "0.7"
                    height: "0.05"
                    left: "0.1"
                    marginTop: "0.02"
                    border: "none"
                    fontSize: "18"
                    backgroundColor: "0x2988e6"
                    color: "0xffffff"
                    textAlign:
                      x: center
                  onClick:
                    - actionType: evalObject
                      object:
                        - =.builtIn.date.getTime:
                            dataOut: CreateAvailability.formDataTemp.currenTimestamp
                        - =.builtIn.date.getTimeStampOfDate:
                            dataIn:
                              date: =..newAppointment.edge.name.setting.startDate
                            dataOut: CreateAvailability.formDataTemp.obtainedTime
                        - if:
                            - =.builtIn.number.less:
                                dataIn:
                                  num1: =..formDataTemp.obtainedTime.end
                                  num2: =..formDataTemp.currenTimestamp
                            - actionType: popUp
                              popUpView: tipsMultiLine
                              wait: true
                            - continue
                    - actionType: evalObject
                      object:
                        - if:
                            - =.builtIn.string.equal:
                                dataIn:
                                  string1: ""
                                  string2: =..newAppointment.edge.name.setting.startDate
                            - actionType: popUp
                              popUpView: emptyStartDate
                              wait: true
                            - continue
                        - if:
                            - =.builtIn.array.isEmpty:
                                dataIn:
                                  array: =..newAppointment.edge.name.setting.day
                            - actionType: popUp
                              popUpView: isNull
                              wait: true
                            - continue
                        - if:
                            - =.builtIn.string.equal:
                                dataIn:
                                  string1: =.Global.currentUser.vertex.id
                                  string2: =.Global.currentFacility.id
                            - actionType: evalObject
                              object:
                                - =.CreateAvailability.newAppointment.edgeAPI.store: ""
                            - actionType: evalObject
                              object:
                                - .Global.createjwt.edge.bvid@: =.Global.locationId
                                - =.Global.createjwt.edgeAPI.store: ""
                                - =.CreateAvailability.newAppointment.edgeAPI.store: ""
                                - .Global.createjwt.edge.bvid@: =.Global.currentFacility.id
                                - =.Global.createjwt.edgeAPI.store: ""
                        - =.builtIn.search.updateEsData:
                            dataIn:
                              id: =..newAppointment.edge.edge.evid
                              type: "40000"
                              bvid: =..newAppointment.edge.edge.bvid
                            dataOut: CreateAvailability.res
                        - .Global.createjwt.edge.bvid@: =.Global.currentUser.vertex.id
                        - =.Global.createjwt.edgeAPI.store: ""
                    - actionType: builtIn
                      funcName: goBack
                      reload: true
    # - .TipsOneLine:
    #   message: "Sync Failed! Please Set Availability Again"
    # popUpView about calender
    - type: popUp
      viewTag: tipsMultiLine
      message: "Please select or change an appropriate start & end time "
      style:
        top: "0"
        left: "0"
        width: "1"
        height: "1"
        backgroundColor: "0x00000066"
        zIndex: "50"
        textAlign:
          y: center
      onClick:
        - actionType: popUpDismiss
          popUpView: __.viewTag
      children:
        - type: view
          style:
            width: "0.51"
            marginLeft: "0.245"
            backgroundColor: "0xE6E6E6"
            borderRadius: "14px"
            textAlign:
              x: center
          children:
            - type: image
              path: aboutRed.svg
              style:
                marginTop: "0.029"
                width: "0.13"
            - type: label
              text: ___.message
              style:
                width: "0.436"
                marginLeft: "0.037"
                marginTop: "0.01"
                fontSize: .Nfont.h14
                fontFamily: "Arial"
                textAlign:
                  x: center
                color: "0x333333"
            - type: view
              style:
                height: "0.029"
    - type: popUp
      viewTag: startDateView
      style:
        left: "0"
        top: "0"
        width: "1"
        height: "1"
        backgroundColor: "0x00000066"
      children:
        - .BaseComponents.calendar:
          children:
            - .BaseComponents.calendarHeader:
              children:
                - type: view
                  style:
                    marginTop: "0.024"
                    left: "0"
                    height: "0.035"
                    width: "0.9"
                  children:
                    - .BaseComponents.newMonthView:
                    - .BaseComponents.newYearView:
                - .BaseComponents.newdevider:
                - .BaseComponents.weekView:
            - .BaseComponents.dayView:
            - .BaseComponents.addButton:
              text: "Select"
              onClick:
                - actionType: evalObject
                  object:
                    - ..newAppointment.edge.name.setting.startDate_show@: =.BaseComponents.calendarDate.todayDate
                    # 传到后台的API中的start date的格式为年-月-日
                    - =.builtIn.date.ShowDateByNumber:
                        dataIn:
                          year: =.BaseComponents.calendarDate.year
                          month: =.BaseComponents.calendarDate.month
                          day: =.BaseComponents.calendarDate.day
                          formatType: "Y-M-D"
                        dataOut: CreateAvailability.newAppointment.edge.name.setting.startDate
                - actionType: builtIn
                  funcName: redraw
                  viewTag: dateView
                - actionType: popUpDismiss
                  popUpView: startDateView
    - type: popUp
      viewTag: endDateView
      style:
        left: "0"
        top: "0"
        width: "1"
        height: "1"
        backgroundColor: "0x00000066"
      children:
        - .BaseComponents.calendar:
          children:
            - .BaseComponents.calendarHeader:
              children:
                - type: view
                  style:
                    marginTop: "0.024"
                    left: "0"
                    height: "0.035"
                    width: "0.9"
                  children:
                    - .BaseComponents.newMonthView:
                    - .BaseComponents.newYearView:
                - .BaseComponents.newdevider:
                - .BaseComponents.weekView:
            - .BaseComponents.dayView:
            - .BaseComponents.addButton:
              text: "Select"
              onClick:
                - actionType: evalObject
                  object:
                    - .CreateAvailability.newAppointment.edge.name.setting.endDate@: =.BaseComponents.calendarDate.todayDate
                - actionType: builtIn
                  funcName: redraw
                  viewTag: dateView
                - actionType: popUpDismiss
                  popUpView: endDateView
    - type: popUp
      viewTag: blockDateView
      style:
        left: "0"
        top: "0"
        width: "1"
        height: "1"
        backgroundColor: "0x00000066"
      children:
        - .BaseComponents.calendar:
          children:
            - .BaseComponents.calendarHeader:
              children:
                - type: view
                  style:
                    marginTop: "0.024"
                    left: "0"
                    height: "0.035"
                    width: "0.9"
                  children:
                    - .BaseComponents.newMonthView:
                    - .BaseComponents.newYearView:
                - .BaseComponents.newdevider:
                - .BaseComponents.weekView:
            - .BaseComponents.dayView:
            - .BaseComponents.addButton:
              text: "Select"
              onClick:
                - actionType: evalObject
                  object:
                    - .CreateAvailability.blockDaySelectedObj@: =.BaseComponents.calendarDate.todayDate
                - actionType: builtIn
                  funcName: redraw
                  viewTag: BlockedTag
                - actionType: popUpDismiss
                  popUpView: blockDateView
    - .SoftTips:
      message: "Please select or change appropriate start & end time"
      viewTag: timeErrorView
    - .SoftTips:
      message: "The selected time overlaps, please select again"
      viewTag: timeOverlapsError
    - .SoftTips:
      message: "Please select the start date"
      viewTag: emptyStartDate
      # colorChange: "0x2988e6"
      # imgPath: aboutBlue.svg
      # children:
      #   - type: view
      #     style:
      #       width: "0.8"
      #       height: "0.3"
      #       top: "0.3"
      #       left: "0.1"
      #       zIndex: "100"
      #       backgroundColor: "0xffffff"
      #       borderRadius: "7"
      #       border:
      #         style: "3"
      #       borderColor: "#f4f8fa"
      #       borderWidth: "3"
      #     children:
      #       - .BaseCheckViewImg:
      #       - .BaseCheckViewLabel:
      #       - .BaseCheckViewButton:
      #         onClick:
      #           - actionType: popUpDismiss
      #             popUpView: ____.viewTag
    - .SoftTips:
      message: "Time is all null, please check it"
      viewTag: isNull
    # - .BaseCheckView: ""
    #   message: "Time is all null, please check it"
    #   viewTag: isNull
    #   colorChange: "0x2988e6"
    #   imgPath: aboutBlue.svg
    #   children:
    #     - type: view
    #       style:
    #         width: "0.8"
    #         height: "0.3"
    #         top: "0.3"
    #         left: "0.1"
    #         zIndex: "100"
    #         backgroundColor: "0xffffff"
    #         borderRadius: "7"
    #         border:
    #           style: "3"
    #         borderColor: "#f4f8fa"
    #         borderWidth: "3"
    #       children:
    #         - .BaseCheckViewImg:
    #         - .BaseCheckViewLabel:
    #         - .BaseCheckViewButton:
    #           onClick:
    #             - actionType: popUpDismiss
    #               popUpView: ____.viewTag
