NewPatients:
  title: "New Patients"
  init:
    - .SignInCheck
    - actionType: evalObject
      object:
        .Global._nonce@:
          =.builtIn.math.random: ""
    - .Global.createjwt.edge.bvid@: =.Global.currentUser.vertex.id #change provider jwt
    - =.Global.createjwt.edgeAPI.store: "" 
    # - =.builtIn.FCM.getAPPID:
    #     dataIn:
    #       appName: =.AppName
    #     dataOut: FirebaseToken.edge.evid  
    # - actionType: evalObject
    #   object: .Global.updateJwt
    # - =.Global.jwt.edgeAPI.store: ""
    - ..invite.edgeAPI.get
    - if:
      - =.builtIn.array.judgeListLength:
          dataIn:
            array: =..invite.inviteList.edge
            len: 0
      - ..formDataTemp.viewInfoImageStyle@: "block"
      - continue
    - if:
      - =.builtIn.array.judgeListLength:
          dataIn:
            array: =..invite.inviteList.edge
            len: 0
      - ..formDataTemp.patientStyle@: "none"
      - continue

    # - if:
    #   - =..invite.inviteList.edge.0
    #   - continue
    #   - =.builtIn.checkField:
    #       dataIn:
    #         contentType: messageHidden
    #         wait: 100
  apiRequest:
    email:
      docCreateResp: ""
      docCreateReq:
        type: .DocType.InboxMessage
        eid: .Global.rootNotebookID 
        name: 
          data: 
            content: ""
            receiverName: ""
            senderName: .Global.MyProfile.name.data.fullName
            receiverAvatarId: ""
            haveAttachment: false
          title: Add Friend Reject
          user: .Global.MyProfile.name.data.avatar
      docAPI:
        store:
          api: cd
          dataIn: NewPatients.apiRequest.email.docCreateReq
          dataOut: NewPatients.apiRequest.email.docCreateResp
  content: ""
  relation:
    edgeRes: ""
    edgeReq:
      id:
        - =.Global.currentUser.vertex.id
      xfname: evid,bvid
      obfname: ctime
      maxcount: "1"
      _nonce: =.Global._nonce
      type: .EdgeType.Email
    edgeAPI:
      get:
        api: re
        dataIn: NewPatients.relation.edgeReq
        dataOut: NewPatients.relation.edgeRes
  denyMessage: ""          
  invite:
    inviteList: 
      edge: []
    edgeAPI:
      get:
        api: re
        type: .EdgeType.InviteInfo
        xfname: evid
        id: .Global.currentUser.vertex.id
        maxcount: "10000"
        dataKey: invite.inviteList
        sCondition: subtype=65536 
        _nonce: =.Global._nonce
      delete: 
        api: dx
        dataIn: NewPatients.dataObject
  dataObject: "" 
  accept:
    response: ""
    edge:
      type: .EdgeType.Accept
      bvid: .Global.currentUser.vertex.id
      name: ""
      refid: ""
    edgeAPI: 
      store:
        api: ce
        dataIn: NewPatients.accept.edge
        dataOut: NewPatients.accept.response
  sendNotification:
    document:
      .Document: ""
      eid: "=..refuse.response.edge.id"
      subtype:
        isOnServer: 1
        isZipped: 0
        isBinary: 0
        isEncrypted: 0
        isExtraKeyNeeded: 0
        isEditable: 0
        applicationDataType: 0
        # 7 th bit
        notification: 1
        ringToneNotify: 0
        sendtoSelf: 0
        # 10 bit
        textMessage: 0
        mediaType: 8
      type: .DocType.Notification
      tage: 5
      name:
        data: ""
        #        senderId: ".Global.currentUser.vertex.id"
        #        senderName: ".Global.currentUser.vertex.name.userName"
        #        data:
        #          text: ''
        notification:
          title: Connection Request From Provider
          context: Connection request from provider
          body: Connection request from provider
          landingPage: InboxDashboard
          targetApp: =.FirebaseToken.response.edge.evid
    docAPI:
      store:
        api: cd
        dataIn: sendNotification.document        
  refuse:
    response: ""
    edge:
      .Edge: ""
      type: .EdgeType.Refuse
      bvid: .Global.currentUser.vertex.id
      name: ""
    edgeAPI:
      store:
        api: ce
        dataIn: refuse.edge
        dataOut: refuse.response
  formDataTemp:
    patientStyle: "block"
    viewInfoImageStyle: "none"
  patientProfile:
    docOut: ""
    docIn: 
      id: ""
      xfname: eid
      type: .DocType.PatientProfile #  type: "257"
      obfname: "mtime"
      maxcount: "1"
      _nonce: =.Global._nonce 
    docAPI: 
      get:
        .DocAPI.get: "" 
        api: rd
        dataIn: patientProfile.docIn
        dataOut: NewPatients.patientProfile.docOut
  temporary:
    edge: ""
    edgeReq:
      id: ""
      xfname: id
      type: 1051
    edgeAPI:
      get: 
        api: re
        dataIn: NewPatients.temporary.edgeReq
        dataOut: NewPatients.temporary.edge  
  patient_RootNotebook:
    edgeReq:
      id: ""
      xfname: bvid
      type: 10000
    edge: ""
    edgeAPI:
      get:
        api: re
        dataIn: NewPatients.patient_RootNotebook.edgeReq
        dataOut: NewPatients.patient_RootNotebook.edge            
  components:
    - .ProgressCheckView: ""
      message: "Accepting ..."
      viewTag: accepting   
    - .ProgressCheckView: ""
      message: "loading ..."
      viewTag: uploading                       
    - .BaseHeader:
    - .HeaderLeftButton:
    - type: view
      style:
        marginTop: "0.1"
        marginLeft: "0"
        width: "1"
        height: "auto"
      children:
        - type: view
          style:
            margin: "0"
            height: "auto"
            width: "1"
            display: ..formDataTemp.viewInfoImageStyle
          children:
            - type: image
              path: emptyPage.svg
              style:
                width: "0.8"
                marginLeft: "0.1"
                marginTop: "0.15"
            - type: label
              text: "There is no invitation now."
              style:
                fontSize: .Nfont.n2
                width: "0.9"
                marginTop: "0.03"
                marginLeft: "0.05"
                height: "0.05"
                textAlign:
                  x: center
                  y: center
        - type: view
          viewTag: inviteTag
          style: 
            display: ..formDataTemp.patientStyle
            left: "0"
            height: "0.9"
            backgroundColor: "#ffffff"
            width: "1"
          children:
            - type: view
              style: 
                marginTop: "auto"
                left: "0"
                width: "1"
                height: "0.05"
                backgroundColor: "0xf3f3f3ff"
              children:
                - type: label
                  text: New Patients
                  style: 
                    left: "0.06"
                    top: "0"
                    height: "0.05"
                    width: "0.5"
                    textAlign:
                      y: center
            - .BaseList:      
              listObject: ..invite.inviteList.edge
              style: 
                width: "1"
                height: "0.85"
                zIndex: "100"
                margin: "0"
                overflow: scroll
              children:
                - .BaseListItem:
                  style:
                    # height: "0.08"
                    height: "auto"
                    width: "1"
                    backgroundColor: "0xFFFFFF"
                    border: 
                      style: "2"
                    borderWidth: "1"
                    borderColor: "0xf0f0f0"
                  children:
                    - type: view
                      style:
                        height: "0.015"
                    - type: view
                      style:  
                          height: "auto"
                          width: "1"
                      children:
                        - type: image
                          path: patientImage.svg
                          path=func: =.builtIn.utils.prepareDocToPath
                          dataKey: itemObject.name.inviterAvatar
                          style:
                            height: "0.04"
                            width: "0.15"
                            display: "inline-block"
                            marginLeft: "0.02"
                            verticalAlign: middle
                        - type: label
                          dataKey: itemObject.name.inviterName
                          style:
                            width: "0.4"
                            fontSize: "18"
                            display: "inline-block"
                            color: "#6e6e6e"
                            textAlign:
                              x: left
                            overflow: hidden
                            whiteSpace: nowrap
                            verticalAlign: middle
                            textOverflow: ellipsis
                        - type: button
                          text: "Accept"
                          onClick: 
                            - actionType: updateObject # updateObject(dataKey, dataObject, dataObjectKey)
                              dataKey: NewPatients.dataObject
                              dataObject: itemObject
                            - actionType: popUp
                              popUpView: uploading                 
                            - actionType: evalObject
                              object:
                                - if:
                                  - =.builtIn.array.isExist:
                                      dataIn:
                                        array: =.Global.formData.patientList
                                        phoneNumber: =..dataObject.name.inviterPhoneNumber
                                  - =..invite.edgeAPI.delete: ""
                                  - continue
                                - ..accept.edge.evid@: =..dataObject.bvid
                                - ..accept.edge.name@: =..dataObject.name
                                - ..accept.edge.refid@: =..dataObject.id
                                - =..accept.edgeAPI.store: ""
                                # accept notification is not needed, just in case we are going to use it, we leave it here
#                                - =.builtIn.FCM.getAPPID:
#                                    dataIn:
#                                      appName: =.TargetApp.patient
#                                    dataOut: FirebaseToken.edge.evid
#                                - actionType: evalObject
#                                  object: .Global.updateJwt
#                                - =.Global.jwt.edgeAPI.store: ""
#                                - ..sendNotification.document.eid@: =..accept.response.edge.id
#                                - =..sendNotification.docAPI.store: ""
#                                - =.builtIn.FCM.getAPPID:
#                                    dataIn:
#                                      appName: =.AppName
#                                    dataOut: FirebaseToken.edge.evid
#                                - actionType: evalObject
#                                  object: .Global.updateJwt
#                                - =.Global.jwt.edgeAPI.store: ""
                            - actionType: evalObject
                              object:
                                .Global._nonce@:
                                  =.builtIn.math.random: ""                          
                            - actionType: evalObject
                              object:    
                                - =..invite.edgeAPI.get: ""
                                - if:
                                  - =.builtIn.array.judgeListLength:
                                      dataIn:
                                        array: =..invite.inviteList.edge
                                        len: 0
                                  - ..formDataTemp.viewInfoImageStyle@: "block"
                                  - continue
                                - if:
                                  - =.builtIn.array.judgeListLength:
                                      dataIn:
                                        array: =..invite.inviteList.edge
                                        len: 0
                                  - ..formDataTemp.patientStyle@: "none"
                                  - continue                        
                            - actionType: builtIn
                              funcName: redraw
                              viewTag: inviteTag
                            - actionType: popUpDismiss
                              popUpView: uploading                      
                            - actionType: popUp
                              popUpView: acceeptSuccessfullyPopUpView
                              wait: 2000
                            - goto: MyPatient
                          style:
                            width: "0.18"
                            height: "0.04"
                            marginLeft: "0.02"
                            fontSize: "15"
                            display: "inline-block"
                            color: "#ffffff"
                            backgroundColor: "#1dc160"
                            verticalAlign: middle
                            borderRadius: "5"
                            textAlign:
                              x: center
                        - type: button
                          text: "Deny"
                          onClick: 
                            - actionType: updateObject # updateObject(dataKey, dataObject, dataObjectKey)
                              dataKey: NewPatients.dataObject
                              dataObject: itemObject
                            - actionType: popUp
                              popUpView: denyPopUpView
                            # - actionType: builtIn
                            #   funcName: show
                            #   viewTag: DenyView 
                          style:
                            width: "0.18"
                            display: "inline-block"
                            height: "0.04"
                            marginLeft: "0.02"
                            fontSize: "15"
                            verticalAlign: middle
                            color: "#ffffff"
                            backgroundColor: "#DC143C"
                            borderRadius: "5"
                            textAlign:
                              x: center
                    - type: view
                      style:
                        height: "0.015"    
    - .simplePopup:
      viewTag: denyPopUpView
      children:
        - .simplePopupView:
          style:
            height: "auto"
            overflow: hidden
          children:
            - type: label
              text: "Are you sure you want to deny?"
              dataKey:
              style:
                marginTop: "0.04"
                marginLeft: "0.03"
                width: "0.64"
                height: "auto"
                color: "0x4b4b4b"
                fontSize: .Nfont.n2
                fontFamily: "sans-serif"
                # backgroundColor: "pink"
                textAlign:
                  x: center
                  y: center
            - type: view
              style:
                marginTop: "0.04"
                height: "0.001"
                width: "0.72"
                backgroundColor: "0x8f8f90"
            - type: view
              style:
                height: "0.06"
                width: "0.72"
              children:
                - .simplePopupSplit1:
                  style:
                    top: "0"
                    height: "0.06"
                - .simplePopupLeftButton:
                  text: "No"
                  style:
                    top: "0.01"
                  onClick:
                    - actionType: popUpDismiss
                      popUpView: denyPopUpView
                - .simplePopupRightButton:
                  text: "Yes"
                  dbEvents: pointer-events
                  style:
                    top: "0.01"
                  onClick:
                    - actionType: evalObject
                      object:
                        .Global._nonce@:
                          =.builtIn.math.random: ""
                    - actionType: evalObject
                      object:
                        - if:
                          - =.builtIn.array.isExist:
                              dataIn:
                                array: =.Global.formData.patientList
                                phoneNumber: =..dataObject.name.inviterPhoneNumber
                          - =..invite.edgeAPI.delete: ""
                          - continue
                        - ..refuse.edge.evid@: =..dataObject.bvid
                        - ..refuse.edge.name@: =..dataObject.name
                        - ..refuse.edge.refid@: =..dataObject.id
                        - if:
                          - =.builtIn.array.isExist:
                              dataIn:
                                array: =.Global.formData.patientList
                                phoneNumber: =..dataObject.name.inviterPhoneNumber
                          - continue
                          - =..refuse.edgeAPI.store: ""
                          # this part do not need notification any more
#                        - =.builtIn.FCM.getAPPID:
#                            dataIn:
#                              appName: =.TargetApp.patient
#                            dataOut: FirebaseToken.edge.evid
#                        - actionType: evalObject
#                          object: .Global.updateJwt
#                        - =.Global.jwt.edgeAPI.store: ""
#                        - ..sendNotification.document.eid@: =..refuse.response.edge.id
#                        - =..sendNotification.docAPI.store: ""
#                        - =.builtIn.FCM.getAPPID:
#                            dataIn:
#                              appName: =.AppName
#                            dataOut: FirebaseToken.edge.evid
#                        - actionType: evalObject
#                          object: .Global.updateJwt
#                        - =.Global.jwt.edgeAPI.store: ""
                        - =..apiRequest.email.docAPI.store: ""
                    - actionType: popUpDismiss
                      popUpView: denyPopUpView
                    - goto: NewPatients
    - .BaseMessageWarnPopup:
      viewTag: acceeptSuccessfullyPopUpView
      imagePath: popUpSuccess.svg
      message: "Accept Successfully!"
    # - type: view
    #   message: "Add Friend Reject"
    #   viewTag: DenyView
    #   style: 
    #     isHidden: true
    #     left: "0"
    #     width: "1"
    #     top: "0"
    #     height: "1"
    #     backgroundColor: "0x00000033"
    #     zIndex: "1000"
    #   children: 
    #     - type: view
    #       style: 
    #         left: "0.1"
    #         width: "0.8"
    #         top: "0.41"
    #         height: "0.19"
    #         backgroundColor: "0xe5e5e5"
    #         border: 
    #           style: "5"
    #         borderWidth: "1"
    #         borderRadius: "10"
    #         boxShadow: "0px 0px 0px 1px #d8d8db"
    #         overflow: hidden
    #       children: 
    #         - type: label
    #           text: ___.message
    #           style: 
    #             marginTop: "0.02"
    #             width: "0.8"
    #             height: "0.02"
    #             fontSize: "4.2vw"
    #             fontWeight: "600"
    #             color: "0x000000"
    #             backgroundColor: "0xe5e5e5"
    #             textAlign: 
    #               x: center
    #               y: center
    #         - type: textView
    #           placeholder: "Enter the reason here"
    #           dataKey: apiRequest.email.docCreateReq.name.data.content
    #           style:
    #             marginTop: "0.02"
    #             backgroundColor: "0xffffff"
    #             height: "0.06"
    #             width: "0.7"
    #             left: "0.05"
    #             border:
    #               style: "1"
    #             borderRadius: "3"
    #             boxShadow: "0px 0px 0px 2px #DEDEDF"
    #         - type: view
    #           style:
    #             marginTop: "0.01"
    #             width: "0.8"  
    #             height: "0.001"    
    #             backgroundColor: "0xcccccc"         
    #         - type: view
    #           style:
    #             width: "0.81"
    #             height: "0.054"
    #           children:
    #             - type: label
    #               text: Cancel
    #               style:  
    #                 top: "0"
    #                 left: "0"
    #                 width: "0.4"
    #                 height: "0.054"
    #                 color: "0x0074ff"
    #                 fontSize: "4.5vw"
    #                 textAlign:
    #                   x: center
    #                   y: center
    #               onClick: 
    #                 - actionType: popUpDismiss
    #                   popUpView: DenyView
    #             - type: view
    #               style:
    #                 top: "0"
    #                 left: "0.41"
    #                 width: "0.001"
    #                 height: "0.054"   
    #                 backgroundColor: "0xcccccc"  
    #             - type: label
    #               text: Send
    #               style:  
    #                 top: "0"
    #                 left: "0.42"
    #                 width: "0.4"
    #                 height: "0.054"
    #                 color: "0x0074ff"
    #                 fontSize: "4.5vw"
    #                 textAlign:
    #                   x: center
    #                   y: center
    #               onClick:
    #                 - actionType: evalObject
    #                   object:
    #                     .Global._nonce@:
    #                       =.builtIn.math.random: ""  
    #                 - actionType: evalObject
    #                   object:
    #                     - =.builtIn.array.add:
    #                         dataIn:
    #                           object: =..relation.edgeReq.id
    #                           value: =..dataObject.bvid
    #                     - =..relation.edgeAPI.get: ""   
    #                     - ..apiRequest.email.docCreateReq.eid@: =..relation.edgeRes.edge.0.id
    #                     - ..apiRequest.email.docCreateReq.name.data.receiverAvatarId@: =..dataObject.name.inviterAvatar
    #                     - ..apiRequest.email.docCreateReq.name.data.receiverName@: =..dataObject.name.inviterName
    #                 - actionType: evalObject
    #                   object:
    #                     - if:
    #                       - =.builtIn.array.isExist:
    #                           dataIn:
    #                             array: =.Global.formData.patientList
    #                             phoneNumber: =..dataObject.name.inviterPhoneNumber
    #                       - =..invite.edgeAPI.delete: ""
    #                       - continue
    #                     - ..refuse.edge.evid@: =..dataObject.bvid
    #                     - ..refuse.edge.name@: =..dataObject.name
    #                     - ..refuse.edge.refid@: =..dataObject.id
    #                     - if:
    #                       - =.builtIn.array.isExist:
    #                           dataIn:
    #                             array: =.Global.formData.patientList
    #                             phoneNumber: =..dataObject.name.inviterPhoneNumber
    #                       - continue
    #                       - =..refuse.edgeAPI.store: "" 
    #                     - =.builtIn.FCM.getAPPID:
    #                         dataIn:
    #                           appName: =.TargetApp.patient
    #                         dataOut: FirebaseToken.edge.evid
    #                     - actionType: evalObject
    #                       object: .Global.updateJwt
    #                     - =.Global.jwt.edgeAPI.store: ""
    #                     - ..sendNotification.document.eid@: =..refuse.response.edge.id
    #                     - =..sendNotification.docAPI.store: ""
    #                     - =.builtIn.FCM.getAPPID:
    #                         dataIn:
    #                           appName: =.AppName
    #                         dataOut: FirebaseToken.edge.evid
    #                     - actionType: evalObject
    #                       object: .Global.updateJwt
    #                     - =.Global.jwt.edgeAPI.store: ""                          
    #                     - =..apiRequest.email.docAPI.store: ""

    #                 - goto: NewPatients