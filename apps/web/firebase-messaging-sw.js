(()=>{"use strict";var e={913:()=>{try{self["workbox:core:6.5.3"]&&_()}catch(e){}},977:()=>{try{self["workbox:precaching:6.5.3"]&&_()}catch(e){}},80:()=>{try{self["workbox:routing:6.5.3"]&&_()}catch(e){}},873:()=>{try{self["workbox:strategies:6.5.3"]&&_()}catch(e){}}},t={};function s(n){var a=t[n];if(void 0!==a)return a.exports;var i=t[n]={exports:{}};return e[n](i,i.exports,s),i.exports}(()=>{s(913);const e=(e,...t)=>{let s=e;return t.length>0&&(s+=` :: ${JSON.stringify(t)}`),s};class t extends Error{constructor(t,s){super(e(t,s)),this.name=t,this.details=s}}const n={googleAnalytics:"googleAnalytics",precache:"precache-v2",prefix:"workbox",runtime:"runtime",suffix:"undefined"!=typeof registration?registration.scope:""},a=e=>[n.prefix,e,n.suffix].filter((e=>e&&e.length>0)).join("-"),i=e=>e||a(n.precache),r=e=>e||a(n.runtime);function o(e,t){const s=t();return e.waitUntil(s),s}s(977);function c(e){if(!e)throw new t("add-to-cache-list-unexpected-type",{entry:e});if("string"==typeof e){const t=new URL(e,location.href);return{cacheKey:t.href,url:t.href}}const{revision:s,url:n}=e;if(!n)throw new t("add-to-cache-list-unexpected-type",{entry:e});if(!s){const e=new URL(n,location.href);return{cacheKey:e.href,url:e.href}}const a=new URL(n,location.href),i=new URL(n,location.href);return a.searchParams.set("__WB_REVISION__",s),{cacheKey:a.href,url:i.href}}class h{constructor(){this.updatedURLs=[],this.notUpdatedURLs=[],this.handlerWillStart=async({request:e,state:t})=>{t&&(t.originalRequest=e)},this.cachedResponseWillBeUsed=async({event:e,state:t,cachedResponse:s})=>{if("install"===e.type&&t&&t.originalRequest&&t.originalRequest instanceof Request){const e=t.originalRequest.url;s?this.notUpdatedURLs.push(e):this.updatedURLs.push(e)}return s}}}class l{constructor({precacheController:e}){this.cacheKeyWillBeUsed=async({request:e,params:t})=>{const s=(null==t?void 0:t.cacheKey)||this._precacheController.getCacheKeyForURL(e.url);return s?new Request(s,{headers:e.headers}):e},this._precacheController=e}}let u;async function d(e,s){let n=null;if(e.url){n=new URL(e.url).origin}if(n!==self.location.origin)throw new t("cross-origin-copy-response",{origin:n});const a=e.clone(),i={headers:new Headers(a.headers),status:a.status,statusText:a.statusText},r=s?s(i):i,o=function(){if(void 0===u){const e=new Response("");if("body"in e)try{new Response(e.body),u=!0}catch(e){u=!1}u=!1}return u}()?a.body:await a.blob();return new Response(o,r)}const f=e=>new URL(String(e),location.href).href.replace(new RegExp(`^${location.origin}`),"");function p(e,t){const s=new URL(e);for(const e of t)s.searchParams.delete(e);return s.href}class g{constructor(){this.promise=new Promise(((e,t)=>{this.resolve=e,this.reject=t}))}}const y=new Set;s(873);function w(e){return"string"==typeof e?new Request(e):e}class m{constructor(e,t){this._cacheKeys={},Object.assign(this,t),this.event=t.event,this._strategy=e,this._handlerDeferred=new g,this._extendLifetimePromises=[],this._plugins=[...e.plugins],this._pluginStateMap=new Map;for(const e of this._plugins)this._pluginStateMap.set(e,{});this.event.waitUntil(this._handlerDeferred.promise)}async fetch(e){const{event:s}=this;let n=w(e);if("navigate"===n.mode&&s instanceof FetchEvent&&s.preloadResponse){const e=await s.preloadResponse;if(e)return e}const a=this.hasCallback("fetchDidFail")?n.clone():null;try{for(const e of this.iterateCallbacks("requestWillFetch"))n=await e({request:n.clone(),event:s})}catch(e){if(e instanceof Error)throw new t("plugin-error-request-will-fetch",{thrownErrorMessage:e.message})}const i=n.clone();try{let e;e=await fetch(n,"navigate"===n.mode?void 0:this._strategy.fetchOptions);for(const t of this.iterateCallbacks("fetchDidSucceed"))e=await t({event:s,request:i,response:e});return e}catch(e){throw a&&await this.runCallbacks("fetchDidFail",{error:e,event:s,originalRequest:a.clone(),request:i.clone()}),e}}async fetchAndCachePut(e){const t=await this.fetch(e),s=t.clone();return this.waitUntil(this.cachePut(e,s)),t}async cacheMatch(e){const t=w(e);let s;const{cacheName:n,matchOptions:a}=this._strategy,i=await this.getCacheKey(t,"read"),r=Object.assign(Object.assign({},a),{cacheName:n});s=await caches.match(i,r);for(const e of this.iterateCallbacks("cachedResponseWillBeUsed"))s=await e({cacheName:n,matchOptions:a,cachedResponse:s,request:i,event:this.event})||void 0;return s}async cachePut(e,s){const n=w(e);var a;await(a=0,new Promise((e=>setTimeout(e,a))));const i=await this.getCacheKey(n,"write");if(!s)throw new t("cache-put-with-no-response",{url:f(i.url)});const r=await this._ensureResponseSafeToCache(s);if(!r)return!1;const{cacheName:o,matchOptions:c}=this._strategy,h=await self.caches.open(o),l=this.hasCallback("cacheDidUpdate"),u=l?await async function(e,t,s,n){const a=p(t.url,s);if(t.url===a)return e.match(t,n);const i=Object.assign(Object.assign({},n),{ignoreSearch:!0}),r=await e.keys(t,i);for(const t of r)if(a===p(t.url,s))return e.match(t,n)}(h,i.clone(),["__WB_REVISION__"],c):null;try{await h.put(i,l?r.clone():r)}catch(e){if(e instanceof Error)throw"QuotaExceededError"===e.name&&await async function(){for(const e of y)await e()}(),e}for(const e of this.iterateCallbacks("cacheDidUpdate"))await e({cacheName:o,oldResponse:u,newResponse:r.clone(),request:i,event:this.event});return!0}async getCacheKey(e,t){const s=`${e.url} | ${t}`;if(!this._cacheKeys[s]){let n=e;for(const e of this.iterateCallbacks("cacheKeyWillBeUsed"))n=w(await e({mode:t,request:n,event:this.event,params:this.params}));this._cacheKeys[s]=n}return this._cacheKeys[s]}hasCallback(e){for(const t of this._strategy.plugins)if(e in t)return!0;return!1}async runCallbacks(e,t){for(const s of this.iterateCallbacks(e))await s(t)}*iterateCallbacks(e){for(const t of this._strategy.plugins)if("function"==typeof t[e]){const s=this._pluginStateMap.get(t),n=n=>{const a=Object.assign(Object.assign({},n),{state:s});return t[e](a)};yield n}}waitUntil(e){return this._extendLifetimePromises.push(e),e}async doneWaiting(){let e;for(;e=this._extendLifetimePromises.shift();)await e}destroy(){this._handlerDeferred.resolve(null)}async _ensureResponseSafeToCache(e){let t=e,s=!1;for(const e of this.iterateCallbacks("cacheWillUpdate"))if(t=await e({request:this.request,response:t,event:this.event})||void 0,s=!0,!t)break;return s||t&&200!==t.status&&(t=void 0),t}}class v{constructor(e={}){this.cacheName=r(e.cacheName),this.plugins=e.plugins||[],this.fetchOptions=e.fetchOptions,this.matchOptions=e.matchOptions}handle(e){const[t]=this.handleAll(e);return t}handleAll(e){e instanceof FetchEvent&&(e={event:e,request:e.request});const t=e.event,s="string"==typeof e.request?new Request(e.request):e.request,n="params"in e?e.params:void 0,a=new m(this,{event:t,request:s,params:n}),i=this._getResponse(a,s,t);return[i,this._awaitComplete(i,a,s,t)]}async _getResponse(e,s,n){let a;await e.runCallbacks("handlerWillStart",{event:n,request:s});try{if(a=await this._handle(s,e),!a||"error"===a.type)throw new t("no-response",{url:s.url})}catch(t){if(t instanceof Error)for(const i of e.iterateCallbacks("handlerDidError"))if(a=await i({error:t,event:n,request:s}),a)break;if(!a)throw t}for(const t of e.iterateCallbacks("handlerWillRespond"))a=await t({event:n,request:s,response:a});return a}async _awaitComplete(e,t,s,n){let a,i;try{a=await e}catch(i){}try{await t.runCallbacks("handlerDidRespond",{event:n,request:s,response:a}),await t.doneWaiting()}catch(e){e instanceof Error&&(i=e)}if(await t.runCallbacks("handlerDidComplete",{event:n,request:s,response:a,error:i}),t.destroy(),i)throw i}}class _ extends v{constructor(e={}){e.cacheName=i(e.cacheName),super(e),this._fallbackToNetwork=!1!==e.fallbackToNetwork,this.plugins.push(_.copyRedirectedCacheableResponsesPlugin)}async _handle(e,t){const s=await t.cacheMatch(e);return s||(t.event&&"install"===t.event.type?await this._handleInstall(e,t):await this._handleFetch(e,t))}async _handleFetch(e,s){let n;const a=s.params||{};if(!this._fallbackToNetwork)throw new t("missing-precache-entry",{cacheName:this.cacheName,url:e.url});{0;const t=a.integrity,i=e.integrity,r=!i||i===t;if(n=await s.fetch(new Request(e,{integrity:"no-cors"!==e.mode?i||t:void 0})),t&&r&&"no-cors"!==e.mode){this._useDefaultCacheabilityPluginIfNeeded();await s.cachePut(e,n.clone());0}}return n}async _handleInstall(e,s){this._useDefaultCacheabilityPluginIfNeeded();const n=await s.fetch(e);if(!await s.cachePut(e,n.clone()))throw new t("bad-precaching-response",{url:e.url,status:n.status});return n}_useDefaultCacheabilityPluginIfNeeded(){let e=null,t=0;for(const[s,n]of this.plugins.entries())n!==_.copyRedirectedCacheableResponsesPlugin&&(n===_.defaultPrecacheCacheabilityPlugin&&(e=s),n.cacheWillUpdate&&t++);0===t?this.plugins.push(_.defaultPrecacheCacheabilityPlugin):t>1&&null!==e&&this.plugins.splice(e,1)}}_.defaultPrecacheCacheabilityPlugin={cacheWillUpdate:async({response:e})=>!e||e.status>=400?null:e},_.copyRedirectedCacheableResponsesPlugin={cacheWillUpdate:async({response:e})=>e.redirected?await d(e):e};class R{constructor({cacheName:e,plugins:t=[],fallbackToNetwork:s=!0}={}){this._urlsToCacheKeys=new Map,this._urlsToCacheModes=new Map,this._cacheKeysToIntegrities=new Map,this._strategy=new _({cacheName:i(e),plugins:[...t,new l({precacheController:this})],fallbackToNetwork:s}),this.install=this.install.bind(this),this.activate=this.activate.bind(this)}get strategy(){return this._strategy}precache(e){this.addToCacheList(e),this._installAndActiveListenersAdded||(self.addEventListener("install",this.install),self.addEventListener("activate",this.activate),this._installAndActiveListenersAdded=!0)}addToCacheList(e){const s=[];for(const n of e){"string"==typeof n?s.push(n):n&&void 0===n.revision&&s.push(n.url);const{cacheKey:e,url:a}=c(n),i="string"!=typeof n&&n.revision?"reload":"default";if(this._urlsToCacheKeys.has(a)&&this._urlsToCacheKeys.get(a)!==e)throw new t("add-to-cache-list-conflicting-entries",{firstEntry:this._urlsToCacheKeys.get(a),secondEntry:e});if("string"!=typeof n&&n.integrity){if(this._cacheKeysToIntegrities.has(e)&&this._cacheKeysToIntegrities.get(e)!==n.integrity)throw new t("add-to-cache-list-conflicting-integrities",{url:a});this._cacheKeysToIntegrities.set(e,n.integrity)}if(this._urlsToCacheKeys.set(a,e),this._urlsToCacheModes.set(a,i),s.length>0){const e=`Workbox is precaching URLs without revision info: ${s.join(", ")}\nThis is generally NOT safe. Learn more at https://bit.ly/wb-precache`;console.warn(e)}}}install(e){return o(e,(async()=>{const t=new h;this.strategy.plugins.push(t);for(const[t,s]of this._urlsToCacheKeys){const n=this._cacheKeysToIntegrities.get(s),a=this._urlsToCacheModes.get(t),i=new Request(t,{integrity:n,cache:a,credentials:"same-origin"});await Promise.all(this.strategy.handleAll({params:{cacheKey:s},request:i,event:e}))}const{updatedURLs:s,notUpdatedURLs:n}=t;return{updatedURLs:s,notUpdatedURLs:n}}))}activate(e){return o(e,(async()=>{const e=await self.caches.open(this.strategy.cacheName),t=await e.keys(),s=new Set(this._urlsToCacheKeys.values()),n=[];for(const a of t)s.has(a.url)||(await e.delete(a),n.push(a.url));return{deletedURLs:n}}))}getURLsToCacheKeys(){return this._urlsToCacheKeys}getCachedURLs(){return[...this._urlsToCacheKeys.keys()]}getCacheKeyForURL(e){const t=new URL(e,location.href);return this._urlsToCacheKeys.get(t.href)}getIntegrityForCacheKey(e){return this._cacheKeysToIntegrities.get(e)}async matchPrecache(e){const t=e instanceof Request?e.url:e,s=this.getCacheKeyForURL(t);if(s){return(await self.caches.open(this.strategy.cacheName)).match(s)}}createHandlerBoundToURL(e){const s=this.getCacheKeyForURL(e);if(!s)throw new t("non-precached-url",{url:e});return t=>(t.request=new Request(e),t.params=Object.assign({cacheKey:s},t.params),this.strategy.handle(t))}}let b;const C=()=>(b||(b=new R),b);s(80);const L=e=>e&&"object"==typeof e?e:{handle:e};class U{constructor(e,t,s="GET"){this.handler=L(t),this.match=e,this.method=s}setCatchHandler(e){this.catchHandler=L(e)}}class q extends U{constructor(e,t,s){super((({url:t})=>{const s=e.exec(t.href);if(s&&(t.origin===location.origin||0===s.index))return s.slice(1)}),t,s)}}class k{constructor(){this._routes=new Map,this._defaultHandlerMap=new Map}get routes(){return this._routes}addFetchListener(){self.addEventListener("fetch",(e=>{const{request:t}=e,s=this.handleRequest({request:t,event:e});s&&e.respondWith(s)}))}addCacheListener(){self.addEventListener("message",(e=>{if(e.data&&"CACHE_URLS"===e.data.type){const{payload:t}=e.data;0;const s=Promise.all(t.urlsToCache.map((t=>{"string"==typeof t&&(t=[t]);const s=new Request(...t);return this.handleRequest({request:s,event:e})})));e.waitUntil(s),e.ports&&e.ports[0]&&s.then((()=>e.ports[0].postMessage(!0)))}}))}handleRequest({request:e,event:t}){const s=new URL(e.url,location.href);if(!s.protocol.startsWith("http"))return void 0;const n=s.origin===location.origin,{params:a,route:i}=this.findMatchingRoute({event:t,request:e,sameOrigin:n,url:s});let r=i&&i.handler;const o=e.method;if(!r&&this._defaultHandlerMap.has(o)&&(r=this._defaultHandlerMap.get(o)),!r)return void 0;let c;try{c=r.handle({url:s,request:e,event:t,params:a})}catch(e){c=Promise.reject(e)}const h=i&&i.catchHandler;return c instanceof Promise&&(this._catchHandler||h)&&(c=c.catch((async n=>{if(h){0;try{return await h.handle({url:s,request:e,event:t,params:a})}catch(e){e instanceof Error&&(n=e)}}if(this._catchHandler)return this._catchHandler.handle({url:s,request:e,event:t});throw n}))),c}findMatchingRoute({url:e,sameOrigin:t,request:s,event:n}){const a=this._routes.get(s.method)||[];for(const i of a){let a;const r=i.match({url:e,sameOrigin:t,request:s,event:n});if(r)return a=r,(Array.isArray(a)&&0===a.length||r.constructor===Object&&0===Object.keys(r).length||"boolean"==typeof r)&&(a=void 0),{route:i,params:a}}return{}}setDefaultHandler(e,t="GET"){this._defaultHandlerMap.set(t,L(e))}setCatchHandler(e){this._catchHandler=L(e)}registerRoute(e){this._routes.has(e.method)||this._routes.set(e.method,[]),this._routes.get(e.method).push(e)}unregisterRoute(e){if(!this._routes.has(e.method))throw new t("unregister-route-but-not-found-with-method",{method:e.method});const s=this._routes.get(e.method).indexOf(e);if(!(s>-1))throw new t("unregister-route-route-not-registered");this._routes.get(e.method).splice(s,1)}}let K;const E=()=>(K||(K=new k,K.addFetchListener(),K.addCacheListener()),K);function T(e,s,n){let a;if("string"==typeof e){const t=new URL(e,location.href);0;a=new U((({url:e})=>e.href===t.href),s,n)}else if(e instanceof RegExp)a=new q(e,s,n);else if("function"==typeof e)a=new U(e,s,n);else{if(!(e instanceof U))throw new t("unsupported-route-type",{moduleName:"workbox-routing",funcName:"registerRoute",paramName:"capture"});a=e}return E().registerRoute(a),a}class x extends U{constructor(e,t){super((({request:s})=>{const n=e.getURLsToCacheKeys();for(const a of function*(e,{ignoreURLParametersMatching:t=[/^utm_/,/^fbclid$/],directoryIndex:s="index.html",cleanURLs:n=!0,urlManipulation:a}={}){const i=new URL(e,location.href);i.hash="",yield i.href;const r=function(e,t=[]){for(const s of[...e.searchParams.keys()])t.some((e=>e.test(s)))&&e.searchParams.delete(s);return e}(i,t);if(yield r.href,s&&r.pathname.endsWith("/")){const e=new URL(r.href);e.pathname+=s,yield e.href}if(n){const e=new URL(r.href);e.pathname+=".html",yield e.href}if(a){const e=a({url:i});for(const t of e)yield t.href}}(s.url,t)){const t=n.get(a);if(t){return{cacheKey:t,integrity:e.getIntegrityForCacheKey(t)}}}}),e.strategy)}}const N={cacheWillUpdate:async({response:e})=>200===e.status||0===e.status?e:null};class P extends v{constructor(e={}){super(e),this.plugins.some((e=>"cacheWillUpdate"in e))||this.plugins.unshift(N)}async _handle(e,s){const n=s.fetchAndCachePut(e).catch((()=>{}));s.waitUntil(n);let a,i=await s.cacheMatch(e);if(i)0;else{0;try{i=await n}catch(e){e instanceof Error&&(a=e)}}if(!i)throw new t("no-response",{url:e.url,error:a});return i}}var M;(function(e){C().precache(e)})([{'revision':'992a8922e0dfbd461e9292f35037843d','url':'../../../apps/web/jsstoreWorker.min.js'},{'revision':'ef13fd21bbde810bd270a57a4f75ac28','url':'../../../apps/web/jsstoreWorker.min.js.LICENSE.txt'},{'revision':'fc037ff6698cebfa3da7ff6b0c532718','url':'../../../apps/web/piBackgroundWorker.js'},{'revision':'e96391fc594b5869546a3cdac4e76b10','url':'../../../apps/web/sql-wasm.wasm'},{'revision':null,'url':'120.2b1d575d520bd3efc166.js'},{'revision':'817ad4647b87686eef3570d285495f05','url':'120.2b1d575d520bd3efc166.js.LICENSE.txt'},{'revision':null,'url':'139.f37ec4c91a42d7e1c13d.js'},{'revision':null,'url':'171.14ba86d85ec15177d6d5.js'},{'revision':null,'url':'191.d47cfbeb9507c8f3e5cd.js'},{'revision':null,'url':'31.82cc19b94c6b7fc8f5f6.js'},{'revision':null,'url':'668.7d596cca973e5b7e2c31.js'},{'revision':null,'url':'693.02168a2128c09a2b73c0.js'},{'revision':null,'url':'856.f1f67edf56188089560e.js'},{'revision':'14834e00d769aab4bb397241721f13c2','url':'856.f1f67edf56188089560e.js.LICENSE.txt'},{'revision':null,'url':'9.d70d6affe3480ae6ba2b.js'},{'revision':'783f14fa45b10e088e68f98251448010','url':'9.d70d6affe3480ae6ba2b.js.LICENSE.txt'},{'revision':null,'url':'96.67f5c26c97e050b952ae.js'},{'revision':null,'url':'962.bc150db33679faf2bca1.js'},{'revision':'fccc5e9bec4929b10e7ebb7b9d771d49','url':'favicon.ico'},{'revision':'8067fe75f0519ba6bd47c9623bf8b824','url':'index.html'},{'revision':null,'url':'main.f973c64422872e377107.js'},{'revision':'238e6da4a44bf6166c85e17a5e580db9','url':'main.f973c64422872e377107.js.LICENSE.txt'}]),function(e){const t=C();T(new x(t,e))}(M),T(new RegExp("/\\.(css|html|yml|mp4|min\\.js)$/"),new P),T((({request:e})=>"script"===e.destination||"style"===e.destination),new P),importScripts("https://www.gstatic.com/firebasejs/8.2.5/firebase-app.js"),importScripts("https://www.gstatic.com/firebasejs/8.2.5/firebase-messaging.js"),firebase.initializeApp({apiKey:"AIzaSyCjNVKmHuDKra5Ct1MKAJ5fI0iQ3UnK7Ho",authDomain:"aitmessage.firebaseapp.com",databaseURL:"https://aitmessage.firebaseio.com",projectId:"aitmessage",storageBucket:"aitmessage.appspot.com",messagingSenderId:"121837683309",appId:"1:121837683309:web:c74076cea3ba35c35f3564"});firebase.messaging().onBackgroundMessage((function(e){console.log("[serviceWorker.js] Received background message ",e);const{collapseKey:t,data:s,from:n,notification:a={}}=e,i=a.title||"",r={body:a.body||"",icon:"favicon.ico"};self.registration.showNotification(i,r)}));const j="color:#C04000;font-weight:500;",W="%c[serviceWorker]",O=console.log;self.addEventListener("install",(function(e){console.log(`${W} install`,e)})),self.addEventListener("activate",(function(e){O(`${W} activate`,e)})),self.addEventListener("message",(function(e){if(O(`${W} message`,e),"skipWaiting"===e.data)return this.skipWaiting()})),self.addEventListener("fetch",(function(e){O(`${W} fetch (${e.request.url})`)})),self.addEventListener("notificationclick",(function(e){var t;const{data:s}=e.notification;O(`${W} Notification clicked`,j,{action:e.action,notification:{title:e.notification.title,body:e.notification.body,data:e.notification.data,dir:e.notification.dir,icon:e.notification.icon,lang:e.notification.lang,tag:e.notification.tag},timestamp:e.timeStamp,type:e.type,evt:e}),"update-click"===(null==s?void 0:s.type)&&(e.notification.close(),null==(t=this.registration.waiting)||t.postMessage({type:"send-skip-waiting"}))})),self.addEventListener("push",(function(e){var t;O(`${W} Push`,j,{data:e.data,timestamp:e.timeStamp,type:e.type,pushEvt:e});e.data;const s=e.currentTarget,n=(null==(t=null==e?void 0:e.target)||t.location,null==s?void 0:s.navigator),{onLine:a,userAgent:i}=(n.connection,n.storage,n);n.platform,n.userAgentData.mobile,self.caches})),self.addEventListener("online",(function(e){O(`${W} online`,e)})),self.addEventListener("offline",(function(e){O(`${W} offline`,e)})),self.addEventListener("error",(function(e){O(`${W} error`,e)})),self.addEventListener("messageerror",(function(e){O(`${W} messageerror`,e)})),self.addEventListener("rejectionhandled",(function(e){O(`${W} rejectionhandled`,e)})),self.addEventListener("unrejectionhandled",(function(e){O(`${W} unrejectionhandled`,e)}))})()})();